{
  "hash": "199c5a219ef507cf8a08f5d8283667cd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Broker Bid Assistant\"\n\nbibliography: bibliography/references.bib\n\ncitation: false\ncitation-location: margin\ncitations-hover: true\n\ncode-copy: true\ncode-fold: true\ncode-link: true\ncode-overflow: wrap\ncode-tools: true\n\nfig-responsive: true\n\nlightbox: true\n\nsource: true\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## Database Connections\n\n### MSSQL\n\n\n\n\n\n\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Currently optional: Connects to a dockerized mssql database.\"}\n# Set up the connection\nmssql_con <- dbConnect(\n  odbc::odbc(),\n  driver = \"ODBC Driver 18 for SQL Server\", \n  server = \"localhost,1433\",               \n  database = \"TestDB\",                    \n  uid = \"sa\",                             \n  pwd = \"MyStr@ngPassw0rd11\",             \n  TrustServerCertificate = \"yes\"\n)\n```\n:::\n\n\n:::\n\n### DuckDB\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Establish a DuckDB, embedded database connection.\"}\nduckdb_con <- dbConnect(duckdb::duckdb(\n     config = list(max_memory = '24GB')), \":memory:\")\n```\n:::\n\n\n:::\n\n## Custom Output Tools\n\n### Tables\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"table building and theming\"}\n# Table theming script\n\neval_palette <- function(pal_name, n = 10, pal_type, direction = NULL) {\n     if (pal_type == \"c\") {\n          return(paletteer_c(pal_name, n, direction))\n     } else if (pal_type == \"d\") {\n          return(paletteer_d(pal_name, n, direction))\n     } else if (pal_type == \"dynamic\") {\n          return(paletteer_dynamic(pal_name, n, direction))\n     }\n}\n\nr_table_theming <- function(r_df,\n                            title,\n                            subtitle,\n                            footnotes_df,\n                            source_note,\n                            pal_df,\n                            multiline_feet = NULL,\n                            tbl_font_size = NULL,\n                            color_by_columns = NULL,\n                            row_name_col = NULL,\n                            do_col_labels = FALSE,\n                            target_everything = FALSE\n) {\n     if(is.null(row_name_col)) {\n          r_table <- gt(r_df)\n          \n     } else{\n          r_table <- gt(r_df,\n                        rowname_col = row_name_col,\n                       )\n     }\n     \n     if (nrow(r_df) > 1 && target_everything == FALSE) {\n          # Formatted rows are added to the accumulator, \n          # building up to the final result\n          r_table <- seq_len(nrow(pal_df)) |>\n               reduce(\\(acc, i) {\n                    data_color(acc,\n                               columns = pal_df$cols[[i]],\n                               palette = pal_df$pals[[i]]\n                               )\n               }, .init = r_table)\n     }\n     else if (nrow(r_df) > 1 && target_everything == TRUE) {\n          # Formatted columns are added to the accumulator, \n          # building up to the final result\n          r_table <- seq_len(nrow(pal_df)) |>\n               reduce(\\(acc, i) {\n                    data_color(\n                         acc,\n                         columns = color_by_columns,\n                         palette = pal_df$pals[[i]],\n                         target_columns = everything()\n                    )\n               }, .init = r_table)\n     }\n     \n     # Footnotes are added to the accumulator, building up to the final result\n     r_table <- seq_len(nrow(footnotes_df)) |>\n          reduce(\\(acc, i) {\n               tab_footnote(\n                    acc,\n                    footnote = footnotes_df$notes[[i]],\n                    location = cells_column_labels(\n                         columns = footnotes_df$locations[[i]]),\n                    placement = \"auto\"\n               )\n          }, .init = r_table)\n     \n     if (ncol(r_df) > 1 && do_col_labels == TRUE) {\n          cell_col_fills = pal_df$pals[[1]]\n          # Formatted column labels are added to the accumulator, \n          # building up to the final result\n          r_table <- seq_len(nrow(pal_df)) |>\n               reduce(\\(acc, i) {\n                    tab_style(\n                         acc,\n                         style = cell_fill(color = cell_col_fills[i]),\n                         locations = cells_column_labels(\n                              columns = pal_df$cols[[i]])\n                    )\n               }, .init = r_table)\n     }\n     \n     r_table <- r_table |>\n          tab_header(title = title, subtitle = subtitle)\n     \n     \n     r_table <- r_table |>\n          tab_source_note(source_note = source_note)\n     \n     r_table <- r_table |>\n          tab_options(\n               column_labels.padding = px(10),\n               column_labels.font.weight = \"bold\",\n               column_labels.background.color = '#333',\n               column_labels.border.top.width = px(0),\n               column_labels.border.bottom.color = 'black',\n               column_labels.vlines.width = px(1),\n               column_labels.border.lr.width = px(1),\n               column_labels.border.bottom.width = px(0),\n               column_labels.border.lr.color = 'black',\n               column_labels.vlines.color = 'black',\n               footnotes.padding = px(5),\n               footnotes.background.color = '#222',\n               footnotes.sep = \", \",\n               footnotes.multiline = multiline_feet,\n               heading.padding = px(10),\n               heading.background.color = '#222',\n               heading.title.font.size = pct(125),\n               heading.subtitle.font.size = pct(110),\n               heading.border.bottom.width = px(0),\n               row.striping.include_table_body = TRUE,\n               row.striping.include_stub = TRUE,\n               row.striping.background_color = '#333',\n               row_group.as_column = TRUE,\n               source_notes.background.color = '#222',\n               stub.border.width = px(0),\n               stub.font.weight = \"bolder\",\n               table.margin.left = px(1),\n               table.margin.right = px(1),\n               table.align = \"center\",\n               table.border.top.width = px(0),\n               table.border.bottom.width = px(0),\n               table.background.color = '#222',\n               table.font.size = tbl_font_size,\n               table.layout = \"auto\",\n               table_body.hlines.color = 'black',\n               table_body.hlines.width = px(0),\n               table_body.vlines.width = px(0),\n               table_body.border.bottom.color = 'black',\n               table_body.border.top.color = 'black',\n               table_body.border.bottom.width = px(0),\n               table_body.border.top.width = px(0)\n          )\n     \n     return(r_table)\n}\n```\n:::\n\n\n:::\n\n#### Plots\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"plot theming\"}\n###----  Plot output script\n\n# normal axes\nggplot_theming <- function(...) {\n     theme_minimal() +\n          theme(\n               axis.title = element_text(\n                    color = 'gray100',\n                    margin = margin(10, 10, 10, 10, \"pt\")\n               ),\n               axis.title.x = element_text(margin = margin(10, 10, 10, 10, \"pt\"), face = \"bold\"),\n               axis.title.y = element_text(\n                    face = \"bold\",\n                    size = rel(1),\n                    margin = margin(10, 10, 10, 10, \"pt\")\n               ),\n               axis.text = element_text(color = 'gray', margin = margin(5, 5, 5, 5, \"pt\")),\n               axis.text.x = element_text(),\n               axis.text.y = element_text(margin = margin(0, 5, 0, 5, \"pt\")),\n               axis.text.x.top = element_text(vjust = 0.5),\n               legend.background = element_rect(fill = '#222'),\n               legend.position = \"bottom\",\n               legend.text = element_text(color = 'gray'),\n               legend.title = element_text(color = 'white'),\n               panel.background = element_rect(fill = '#222'),\n               panel.grid.major.x = element_line(linetype = 'solid', color = 'black'),\n               panel.grid.minor.x = element_line(linetype = \"dotted\", color = 'black'),\n               panel.grid.major.y = element_line(\n                    linetype = 'solid',\n                    color = 'black',\n                    linewidth = .2\n               ),\n               panel.grid.minor.y = element_line(linetype = 'dotted', color = 'black'),\n               plot.title = element_text(\n                    face = \"bold\",\n                    color = 'white',\n                    size = rel(1.5)\n               ),\n               plot.background = element_rect(fill = '#222'),\n               plot.caption = element_text(\n                    size = 10,\n                    color = \"gray80\",\n                    margin = margin(5, 2, 5, 2),\n                    hjust = 0\n               ),\n               #plot.margin = margin(0, 0, 0, 0, \"pt\"),\n               strip.text.y = element_text(color = \"gray\"),\n               strip.text.x = element_text(color = \"gray\", face = \"bold\"),\n               text = element_text(size = 12)\n          )\n}\n\n# flipped axes\nggplot_theming_flipped_axes <- function(...) {\n     theme_minimal() +\n          theme(\n               axis.title = element_text(color = 'gray100'),\n               axis.text = element_text(color = 'gray'),\n               panel.background = element_rect(fill = '#222'),\n               panel.grid.major.x = element_line(linetype = 'dashed'),\n               panel.grid.minor.x = element_line(linetype = \"dotted\"),\n               panel.grid.major.y = element_line(linetype = 'solid'),\n               panel.grid.minor.y = element_line(linetype = 'dotted'),\n               plot.title = element_text(color = 'white', size = rel(2)),\n               plot.background = element_rect(fill = '#222'),\n               legend.background = element_rect(fill = '#222'),\n               legend.text = element_text(color = 'gray'),\n               legend.title = element_text(color = 'white')\n          )\n}\n```\n:::\n\n\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"plot building\"}\n# Load necessary libraries\nlibrary(DBI)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(paletteer)\nlibrary(openair)\nsource(\"./scripts/Output/Plots/plot_themer.R\")\nsource(\"./scripts/Setup/Enum/create_enum_and_associate.R\")\n\n# Helper function to execute a query and return the result\nexecute_query <- function(con, query) {\n     dbGetQuery(con, query)\n}\n\n# 1 Day Temperature Trend ----\nplot_temperature_trend <- function(con, freezing_threshold = 32) {\n     query <- \"\n    SELECT\n      temperature_2m,\n      strftime(date, '%H:%M:%S') AS time_only,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)\n     \n     rPlot <- ggplot(data, aes(x = common_date, y = temperature_2m)) +\n          geom_line(color = \"black\", size = 0.5) +\n          geom_hline(\n               yintercept = freezing_threshold,\n               linetype = \"dashed\",\n               color = \"lightblue\",\n               linewidth = 0.4\n          ) +\n          geom_ribbon(\n               aes(\n                    ymin = freezing_threshold,\n                    ymax = ifelse(\n                         temperature_2m > freezing_threshold,\n                         temperature_2m,\n                         freezing_threshold\n                    )\n               ),\n               fill = \"green\",\n               alpha = 0.5,\n               na.rm = TRUE\n          ) +\n          geom_ribbon(\n               aes(\n                    ymin = ifelse(\n                         temperature_2m < freezing_threshold,\n                         temperature_2m,\n                         freezing_threshold\n                    ),\n                    ymax = freezing_threshold\n               ),\n               fill = \"lightblue\",\n               alpha = 0.5,\n               na.rm = TRUE\n          ) +\n          labs(\n               title = \"Temperature Forecast\",\n               x = \"\",\n               y = \"° F\",\n               caption = \"Green fill indicates temperatures above freezing; light blue fill indicates below freezing.\"\n          ) +\n          scale_x_datetime(\n               labels = label_date(\"%l %p\"),\n               breaks = \"7 day\",\n               minor_breaks = \"1 hour\",\n               guide = guide_axis(n.dodge = 2)\n          ) +\n          facet_grid(. ~ day) +\n          ggplot_theming()\n     \n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggTemperature.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file\n     img <- readPNG(plot_path)\n     # Display the image\n     grid::grid.raster(img)\n}\n\n# Precipitation and Probability ----\nplot_precipitation <- function(con) {\n     query <- \"\n    SELECT\n      precipitation_probability,\n      precipitation,\n      rain,\n      snowfall,\n      strftime(date, '%H:%M:%S') AS time_only,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)\n     \n     scale_factor <- max(data$precipitation_probability, na.rm = TRUE) / max(data$rain, data$snowfall, na.rm = TRUE)\n     \n     rPlot <- ggplot(data, aes(x = as.POSIXct(common_date))) +\n          geom_area(\n               aes(y = precipitation_probability, fill = \"Precipitation Probability\"),\n               linewidth = 0.2\n          ) +\n          geom_line(\n               aes(y = rain * scale_factor, color = \"Rain (inches)\"),\n               size = 1,\n               linetype = \"dashed\"\n          ) +\n          geom_line(\n               aes(y = snowfall * scale_factor, color = \"Snowfall (inches)\"),\n               size = 1,\n               linetype = \"dotted\"\n          ) +\n          scale_y_continuous(\n               name = \"Precipitation Probability (%)\",\n               sec.axis = sec_axis( ~ . / ifelse(\n                    is.infinite(scale_factor), 1000, scale_factor\n               ), name = \"Rain / Snowfall (inches)\")\n          ) +\n          scale_x_datetime(\n               labels = scales::date_format(\"%H:%M\"),\n               breaks = \"6 hours\",\n               minor_breaks = \"2 hour\",\n               guide = guide_axis(n.dodge = 1)\n          ) +\n          scale_color_manual(\n               name = \"Weather Condition\",\n               values = c(\n                    \"Rain (inches)\" = \"skyblue\",\n                    \"Snowfall (inches)\" = \"snow\"\n               )\n          ) +\n          scale_fill_manual(name = \"Chance of %\",\n                            values = c(\"Precipitation Probability\" = \"gray20\")) +\n          labs(title = \"Precipitation Forecast\", x = \"Time of Day\", y = \"Precipitation Probability (%)\") +\n          facet_grid(~ day) +\n          ggplot_theming()\n     \n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggPrecipitation.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file\n     img <- readPNG(plot_path)\n     # Display the image\n     grid::grid.raster(img)\n     \n}\n\n# OpenAir Wind Rose ----\nplot_wind_rose <- function(con) {\n     query <- \"\n    SELECT\n      wind_speed_10m,\n      wind_direction_10m,\n      strftime(date, '%H:%M:%S') AS time_only,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)\n     \n     windRose(\n          data,\n          ws = \"wind_speed_10m\",\n          wd = \"wind_direction_10m\",\n          breaks = 5,\n          paddle = TRUE,\n          cols = paletteer_d(\"ggsci::springfield_simpsons\", n = 3),\n          key.position = \"left\"\n     )\n}\n\n# ggplot Wind Rose ----\nplot_wind_rose_ggplot <- function(con) {\n     query <- \"\n    SELECT\n      wind_speed_10m,\n      wind_direction_10m,\n      strftime(date, '%H:%M:%S') AS time_only,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)\n     \n     data <- data |>\n          mutate(speed_bin = cut(\n               wind_speed_10m,\n               breaks = c(0, 2, 4, 6, 8, 10, Inf),\n               labels = c(\"0-2\", \"2-4\", \"4-6\", \"6-8\", \"8-10\", \"10+\")\n          ))\n     \n     rPlot <- ggplot(data, aes(x = wind_direction_10m, fill = speed_bin)) +\n          geom_histogram(binwidth = 10,\n                         color = \"black\",\n                         position = \"stack\") +\n          coord_polar(start = 2 * pi) +\n          scale_x_continuous(limits = c(0, 360),\n                             breaks = seq(0, 360, by = 45)) +\n          labs(\n               title = \"Wind Rose\",\n               x = \"Wind Direction (°)\",\n               y = \"Frequency\",\n               fill = \"Wind Speed (m/s)\"\n          ) +\n          ggplot_theming()\n     \n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggWindRose.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file\n     img <- readPNG(plot_path)\n     # Display the image\n     grid::grid.raster(img)\n     \n}\n\n# Visibility geom_line ----\nplot_visibility_line <- function(con) {\n     query <- \"\n    SELECT\n      visibility,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)\n     \n     rPlot <- ggplot(data, aes(x = common_date, y = visibility / 10 ^ 3)) +\n          geom_line(color = \"white\", size = 0.5) +\n          geom_point(color = \"gray\", alpha = 1) +\n          labs(title = \"Visibility Map\", x = \"Date\", y = \"Visibility (km)\") +\n          scale_x_datetime(\n               labels = scales::date_format(\"%H:%M\"),\n               breaks = \"6 hours\",\n               minor_breaks = \"2 hour\",\n               guide = guide_axis(n.dodge = 1)\n          ) +\n          facet_grid(~ day) +\n          ggplot_theming()\n     \n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggVisibilityLine.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file\n     img <- readPNG(plot_path)\n     # Display the image\n     grid::grid.raster(img)\n     \n}\n\n# Visibility Non-Categorical Heat ----\nplot_visibility_heat <- function(con) {\n     query <- \"\n    SELECT\n      visibility,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)\n     \n     rPlot <- ggplot(data, aes(\n          x = common_date,\n          y = day,\n          fill = visibility / 10 ^ 3\n     )) +\n          geom_tile() +\n          scale_fill_viridis_c(option = \"magma\") +\n          labs(\n               title = \"Visibility (km)\",\n               x = \"Time of Day\",\n               y = \"Date\",\n               fill = \"Visibility (km)\"\n          ) +\n          scale_x_datetime(\n               labels = scales::date_format(\"%H:%M\"),\n               breaks = \"6 hours\",\n               minor_breaks = \"2 hour\",\n               guide = guide_axis(n.dodge = 1)\n          ) +\n          ggplot_theming()\n     \n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggVisibilityHeat.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file\n     img <- readPNG(plot_path)\n     # Display the image\n     grid::grid.raster(img)\n     \n}\n\n# Visibility Categorical Heat ----\nplot_visibility_categorical_heat <- function(con) {\n     query <- \"\n    SELECT\n      visibility,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)\n     \n     data <- data |>\n          mutate(\n               visibility_category = case_when(\n                    visibility > 30 * 10 ^ 3 ~ \"Clearest (>30 km)\",\n                    visibility > 10 * 10 ^ 3 ~ \"Excellent (10-30 km)\",\n                    visibility > 5 * 10 ^ 3 ~ \"Good (5-10 km)\",\n                    visibility > 2 * 10 ^ 3 ~ \"Moderate (2-5 km)\",\n                    visibility > 1 * 10 ^ 3 ~ \"Low (1-2 km)\",\n                    TRUE ~ \"Fog/Haze (<1 km)\"\n               )\n          )\n     \n     rPlot <- ggplot(data,\n                     aes(x = common_date, y = day, fill = visibility_category)) +\n          geom_tile() +\n          scale_fill_manual(\n               values = c(\n                    \"Clearest (>30 km)\" = \"green\",\n                    \"Excellent (10-30 km)\" = \"darkgreen\",\n                    \"Good (5-10 km)\" = \"yellow\",\n                    \"Moderate (2-5 km)\" = \"orange\",\n                    \"Low (1-2 km)\" = \"red\",\n                    \"Fog/Haze (<1 km)\" = \"purple\"\n               )\n          ) +\n          labs(\n               title = \"Visibility Category Map\",\n               x = \"Time of Day\",\n               y = \"Date\",\n               fill = \"Visibility Level\"\n          ) +\n          scale_x_datetime(\n               labels = scales::date_format(\"%H:%M\"),\n               breaks = \"6 hours\",\n               minor_breaks = \"2 hour\",\n               guide = guide_axis(n.dodge = 1)\n          ) +\n          ggplot_theming()\n     \n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggVisibilityCat.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file\n     img <- readPNG(plot_path)\n     # Display the image\n     grid::grid.raster(img)\n}\n\n# Weather Codes ----\nplot_weather_codes <- function(con) {\n     \n     query <- \"\n    SELECT\n      hr.weather_code::INTEGER::TEXT::WeatherCode AS weather_code,\n      wc.Description AS description,\n      strftime(hr.date, '%H:%M:%S') AS time_only,\n      strftime(hr.date, '%b %d') AS day\n    FROM\n      hourly_day_forecast hr\n    LEFT JOIN WeatherCode wc ON wc.Code == hr.weather_code;\n  \"\n     \n     data <- execute_query(con, query)\n     \n     data$time_only <- as.POSIXct(data$time_only, format = \"%H:%M:%S\")\n     \n     rPlot <- ggplot(data, aes(x = day, y = time_only, fill = description)) +\n          geom_tile(alpha = 0.3) +\n          scale_fill_paletteer_d(\"khroma::highcontrast\") +\n          scale_y_datetime(\n               date_labels = \"%H:%M\",\n               date_breaks = \"2 hours\",\n               sec.axis = dup_axis(name = \"\")\n          ) +\n          labs(\n               title = \"Weather Code Map\",\n               x = \"Day\",\n               y = \"Time of Day\",\n               fill = \"Weather Code\"\n          ) +\n          ggplot_theming()\n     \n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggWeatherCodes.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file\n     img <- readPNG(plot_path)\n     # Display the image\n     grid::grid.raster(img)\n     \n}\n```\n:::\n\n\n:::\n\n## Weather Data API Connection\n\n[@openMeteo_2025]\n\n#### Realistic Coordinate Examples\n\n-   Intersection of Hwy 70 & 270\n\n    -   38.748, -90.439\n\n-   The St. Louis Regional Freightway\n\n    -   38.627480, -90.189781\n\n-   Port of St. Louis\n\n    -   38.609215, -90.204275\n\n-   USPS Office Kansas City International Airport\n\n    -   KC, MO\n\n        -   39.304413, -94.720711\n\n-   Walmart Distribution Center\n\n    -   1100 Matlock Dr, Saint James, MO 65559-9026\n\n        -   38.002338, -91.634422\n\n-   KCS International Freight Gateway\n\n    -   3301 East 147th Street, Kansas City, MO 64147\n\n        -   38.84930037041913, -94.55499143307868\n\n### Import Hourly Data\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.python .cell-code  code-summary=\"Run the API script to import the dataset.\"}\n\ndef import_api_hourly(latitude: float, longitude: float) -> pd.DataFrame:\n     # Setup the Open-Meteo API client with cache and retry on error\n     cache_session = requests_cache.CachedSession('.cache', expire_after = 3600)\n     retry_session = retry(cache_session, retries = 5, backoff_factor = 0.2)\n     openmeteo = openmeteo_requests.Client(session = retry_session)\n     \n     # Make sure all required weather variables are listed here\n     # The order of variables in hourly or daily is important to assign them correctly below\n     url = \"https://api.open-meteo.com/v1/forecast\"\n     params = {\n     \t\"latitude\": latitude,\n     \t\"longitude\": longitude,\n     \t\"hourly\": \n     \t     [\"temperature_2m\", \n     \t     \"precipitation_probability\", \n     \t     \"precipitation\", \n     \t     \"rain\", \n     \t     \"showers\", \n     \t     \"snowfall\", \n     \t     \"snow_depth\", \n     \t     \"weather_code\", \n     \t     \"visibility\", \n     \t     \"wind_speed_10m\", \n     \t     \"wind_direction_10m\"],\n     \t\"temperature_unit\": \"fahrenheit\",\n     \t\"wind_speed_unit\": \"mph\",\n     \t\"precipitation_unit\": \"inch\",\n     \t\"timezone\": \"America/Chicago\",\n     \t\"forecast_days\": 1,\n     \t\"past_hours\": 6,\n     \t\"forecast_hours\": 24,\n     \t\"models\": \"best_match\"\n     }\n     responses = openmeteo.weather_api(url, params=params)\n     \n     # Process first location. Add a for-loop for multiple locations or weather models\n     response = responses[0]\n     print(f\"Coordinates {response.Latitude()}°N {response.Longitude()}°E\")\n     print(f\"Elevation {response.Elevation()} m asl\")\n     print(f\"Timezone {response.Timezone()} {response.TimezoneAbbreviation()}\")\n     print(f\"Timezone difference to GMT+0 {response.UtcOffsetSeconds()} s\")\n     \n     # Process hourly data. The order of variables needs to be the same as requested.\n     hourly = response.Hourly()\n     hourly_temperature_2m = hourly.Variables(0).ValuesAsNumpy()\n     hourly_precipitation_probability = hourly.Variables(1).ValuesAsNumpy()\n     hourly_precipitation = hourly.Variables(2).ValuesAsNumpy()\n     hourly_rain = hourly.Variables(3).ValuesAsNumpy()\n     hourly_showers = hourly.Variables(4).ValuesAsNumpy()\n     hourly_snowfall = hourly.Variables(5).ValuesAsNumpy()\n     hourly_snow_depth = hourly.Variables(6).ValuesAsNumpy()\n     hourly_weather_code = hourly.Variables(7).ValuesAsNumpy()\n     hourly_visibility = hourly.Variables(8).ValuesAsNumpy()\n     hourly_wind_speed_10m = hourly.Variables(9).ValuesAsNumpy()\n     hourly_wind_direction_10m = hourly.Variables(10).ValuesAsNumpy()\n     \n     hourly_data = {\"date\": pd.date_range(\n     \tstart = pd.to_datetime(hourly.Time(), unit = \"s\", utc = True),\n     \tend = pd.to_datetime(hourly.TimeEnd(), unit = \"s\", utc = True),\n     \tfreq = pd.Timedelta(seconds = hourly.Interval()),\n     \tinclusive = \"left\"\n     )}\n     \n     hourly_data[\"temperature_2m\"] = hourly_temperature_2m\n     hourly_data[\"precipitation_probability\"] = hourly_precipitation_probability\n     hourly_data[\"precipitation\"] = hourly_precipitation\n     hourly_data[\"rain\"] = hourly_rain\n     hourly_data[\"showers\"] = hourly_showers\n     hourly_data[\"snowfall\"] = hourly_snowfall\n     hourly_data[\"snow_depth\"] = hourly_snow_depth\n     hourly_data[\"weather_code\"] = hourly_weather_code\n     hourly_data[\"visibility\"] = hourly_visibility\n     hourly_data[\"wind_speed_10m\"] = hourly_wind_speed_10m\n     hourly_data[\"wind_direction_10m\"] = hourly_wind_direction_10m\n     \n     return(pd.DataFrame(data = hourly_data))\n```\n:::\n\n\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Write hourly api results.\"}\ndbWriteTable(\nduckdb_con, \n\"hourly_day_forecast\", \npy$import_api_hourly(38.748, -90.439), \noverwrite = TRUE\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinates 38.74498748779297°N -90.4433364868164°E\nElevation 175.0 m asl\nTimezone b'America/Chicago' b'GMT-6'\nTimezone difference to GMT+0 -21600 s\n```\n\n\n:::\n:::\n\n\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.python .cell-code  code-summary=\"Run the API script to import the dataset.\"}\nimport openmeteo_requests\n\nimport requests_cache\nimport pandas as pd\nfrom retry_requests import retry\n\ndef import_api_hourly_historical(latitude: float, longitude: float) -> pd.DataFrame:\n     \n     # Setup the Open-Meteo API client with cache and retry on error\n     cache_session = requests_cache.CachedSession('.cache', expire_after = -1)\n     retry_session = retry(cache_session, retries = 5, backoff_factor = 0.2)\n     openmeteo = openmeteo_requests.Client(session = retry_session)\n     \n     # Make sure all required weather variables are listed here\n     # The order of variables in hourly or daily is important to assign them correctly below\n     url = \"https://archive-api.open-meteo.com/v1/archive\"\n     params = {\n     \t\"latitude\": 38.748,\n     \t\"longitude\": -90.439,\n     \t\"start_date\": \"1980-01-01\",\n     \t\"end_date\": \"2024-12-31\",\n     \t\"hourly\": [\n     \t     \"temperature_2m\", \n     \t     \"precipitation\", \n     \t     \"rain\", \n     \t     \"snowfall\", \n     \t     \"snow_depth\", \n     \t     \"visibility\",\n     \t     \"weather_code\", \n     \t     \"wind_speed_10m\", \n     \t     \"wind_direction_10m\"],\n     \t\"temperature_unit\": \"fahrenheit\",\n     \t\"wind_speed_unit\": \"mph\",\n     \t\"precipitation_unit\": \"inch\",\n     \t\"timezone\": \"America/Chicago\",\n     \t\"models\": \"best_match\"\n     }\n     responses = openmeteo.weather_api(url, params=params)\n     \n     # Process first location. Add a for-loop for multiple locations or weather models\n     response = responses[0]\n     print(f\"Coordinates {response.Latitude()}°N {response.Longitude()}°E\")\n     print(f\"Elevation {response.Elevation()} m asl\")\n     print(f\"Timezone {response.Timezone()} {response.TimezoneAbbreviation()}\")\n     print(f\"Timezone difference to GMT+0 {response.UtcOffsetSeconds()} s\")\n     \n     # Process hourly data. The order of variables needs to be the same as requested.\n     hourly = response.Hourly()\n     hourly_temperature_2m = hourly.Variables(0).ValuesAsNumpy()\n     hourly_precipitation = hourly.Variables(1).ValuesAsNumpy()\n     hourly_rain = hourly.Variables(2).ValuesAsNumpy()\n     hourly_snowfall = hourly.Variables(3).ValuesAsNumpy()\n     hourly_snow_depth = hourly.Variables(4).ValuesAsNumpy()\n     hourly_visibility = hourly.Variables(5).ValuesAsNumpy()\n     hourly_weather_code = hourly.Variables(6).ValuesAsNumpy()\n     hourly_wind_speed_10m = hourly.Variables(7).ValuesAsNumpy()\n     hourly_wind_direction_10m = hourly.Variables(8).ValuesAsNumpy()\n\n     hourly_data = {\"date\": pd.date_range(\n     \tstart = pd.to_datetime(hourly.Time(), unit = \"s\", utc = True),\n     \tend = pd.to_datetime(hourly.TimeEnd(), unit = \"s\", utc = True),\n     \tfreq = pd.Timedelta(seconds = hourly.Interval()),\n     \tinclusive = \"left\"\n     )}\n     \n     hourly_data[\"temperature_2m\"] = hourly_temperature_2m\n     hourly_data[\"precipitation\"] = hourly_precipitation\n     hourly_data[\"rain\"] = hourly_rain\n     hourly_data[\"snowfall\"] = hourly_snowfall\n     hourly_data[\"snow_depth\"] = hourly_snow_depth\n     hourly_data[\"visibility\"] = hourly_visibility\n     hourly_data[\"weather_code\"] = hourly_weather_code\n     hourly_data[\"wind_speed_10m\"] = hourly_wind_speed_10m\n     hourly_data[\"wind_direction_10m\"] = hourly_wind_direction_10m\n     \n     hourly_dataframe = pd.DataFrame(data = hourly_data)\n     \n     return(hourly_dataframe)\n```\n:::\n\n\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Write hourly api historical data.\"}\ndbWriteTable(\nduckdb_con, \n\"hourly_historical_weather\",\npy$import_api_hourly_historical(38.748, -90.439),\noverwrite = TRUE\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinates 38.769771575927734°N -90.49114990234375°E\nElevation 175.0 m asl\nTimezone b'America/Chicago' b'GMT-6'\nTimezone difference to GMT+0 -21600 s\n```\n\n\n:::\n:::\n\n\n:::\n\n### Enum\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"load enum file\"}\n#' Create ENUM Type and Associate Codes with Descriptions\n#'\n#' This function creates an ENUM type in DuckDB and associates codes with their descriptions.\n#' It can be used to create other ENUM types and associations\n#'\n#' @param duckdb_conn A DuckDB connection object.\n#' @param enum_name A string specifying the name of the ENUM type to be created.\n#' @param codes A character vector of codes to be included in the ENUM type.\n#' @param descriptions A character vector of descriptions corresponding to the codes.\n#' @return A data frame associating the codes with their descriptions.\n#' @examples\n#' \\dontrun{\n#' library(DBI)\n#' \n#' codes <- c('0', '1', '2', '3', '45', '48', '51', '53', '55', '56', '57', \n#'            '61', '63', '65', '66', '67', '71', '73', '75', '77', '80', '81', \n#'            '82', '85', '86', '95', '96', '99')\n#' descriptions <- c('Clear sky', 'Mainly clear', 'Partly cloudy', 'Overcast', \n#'                   'Fog', 'Depositing rime fog', 'Drizzle: Light', 'Drizzle: Moderate', \n#'                   'Drizzle: Dense', 'Freezing Drizzle: Light', 'Freezing Drizzle: Dense', \n#'                   'Rain: Slight', 'Rain: Moderate', 'Rain: Heavy', 'Freezing Rain: Light', \n#'                   'Freezing Rain: Heavy', 'Snow fall: Slight', 'Snow fall: Moderate', \n#'                   'Snow fall: Heavy', 'Snow grains', 'Rain showers: Slight', \n#'                   'Rain showers: Moderate', 'Rain showers: Violent', 'Snow showers: Slight', \n#'                   'Snow showers: Heavy', 'Thunderstorm: Slight or moderate', \n#'                   'Thunderstorm with slight hail', 'Thunderstorm with heavy hail')\n#' \n#' result <- create_enum_and_associate(duckdb_con, \"WeatherCode\", codes, descriptions)\n#' print(result)\n#' }\n#' @export\ncreate_enum_and_associate <- function(duckdb_con, enum_name, codes, descriptions) {\n     \n     # Attempt to drop the ENUM type if it exists\n     drop_query <- paste0(\"DROP TYPE IF EXISTS \", enum_name, \";\")\n     \n     tryCatch({\n          dbExecute(duckdb_con, drop_query)\n          message(paste(\"Dropped existing ENUM type:\", enum_name))\n     }, error = \\(e) {\n          message(paste0(\"No existing ENUM type to drop: \", enum_name))\n     })\n     \n     # Create the ENUM type\n     enum_query <- paste0(\"CREATE TYPE \", enum_name, \" AS ENUM (\", \n                          paste0(\"'\", codes, \"'\", collapse = \", \"), \");\")\n     dbExecute(duckdb_con, enum_query)\n     \n     # Create a data frame to associate codes with descriptions\n     #association_df <- data.frame(Code = codes, Description = descriptions, stringsAsFactors = FALSE)\n     \n     dbWriteTable(\n          duckdb_con,\n          \"WeatherCode\",\n          data.frame(\n               Code = codes,\n               Description = descriptions,\n               stringsAsFactors = TRUE\n          ),\n          overwrite = TRUE\n     )\n     \n     association_tbl <- tbl(duckdb_con, \"WeatherCode\")\n     \n     # Return the data frame\n     return(association_tbl)\n}\n```\n:::\n\n\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Sets the custom data types in the database.\"}\ncodes <- c(\n'0',\n'1',\n'2',\n'3',\n'45',\n'48',\n'51',\n'53',\n'55',\n'56',\n'57',\n'61',\n'63',\n'65',\n'66',\n'67',\n'71',\n'73',\n'75',\n'77',\n'80',\n'81',\n'82',\n'85',\n'86',\n'95',\n'96',\n'99'\n)\n\ndescriptions <- c(\n'Clear sky',\n'Mainly clear',\n'Partly cloudy',\n'Overcast',\n'Fog',\n'Depositing rime fog',\n'Drizzle: light',\n'Drizzle: moderate',\n'Drizzle: dense',\n'Freezing drizzle: light',\n'Freezing drizzle: dense',\n'Rain: slight',\n'Rain: moderate',\n'Rain: heavy',\n'Freezing rain: light',\n'Freezing rain: heavy',\n'Snow fall: slight',\n'Snow fall: moderate',\n'Snow fall: heavy',\n'Snow grains',\n'Rain showers: slight',\n'Rain showers: moderate',\n'Rain showers: violent',\n'Snow showers: slight',\n'Snow showers: heavy',\n'Thunderstorm: slight or moderate',\n'Thunderstorm with slight hail',\n'Thunderstorm with heavy hail'\n)\n\ncreate_enum_and_associate(duckdb_con, \"WeatherCode\", codes, descriptions)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDropped existing ENUM type: WeatherCode\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Source:   table<WeatherCode> [?? x 2]\n# Database: DuckDB v1.1.3 [emosso@Linux 6.11.0-17-generic:R 4.4.2/:memory:]\n   Code  Description            \n   <fct> <fct>                  \n 1 0     Clear sky              \n 2 1     Mainly clear           \n 3 2     Partly cloudy          \n 4 3     Overcast               \n 5 45    Fog                    \n 6 48    Depositing rime fog    \n 7 51    Drizzle: light         \n 8 53    Drizzle: moderate      \n 9 55    Drizzle: dense         \n10 56    Freezing drizzle: light\n# ℹ more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"table setup\"}\nrTable <- tbl(duckdb_con, \"WeatherCode\") |> collect()\n\nlocations_list = colnames(rTable)\n\nnotes_list =  list(\n\"World Meteorlogical Organization (WMO) code.\", \n\"Type of meterological event.\")\n\nfootnotes_df <- tibble(\n  notes = notes_list, \n  locations = locations_list)\n\npal_df <- tibble(\n  cols = locations_list,\n  pals = list(eval_palette(\"basetheme::brutal\", 7, 'd', 1))\n)\n\nrTable <- r_table_theming(\nrTable,\ntitle = \"Weather Code: As Data Type\",\nsubtitle = NULL,\nfootnotes_df,\nsource_note = md(\"**source**: World Meteorlogical Organization\"),\npal_df,\nmultiline_feet = TRUE,\ntbl_font_size = pct(85),\ntarget_everything = TRUE,\ncolor_by_columns = \"Code\"\n#row_name_col = \"Model\"\n)\n```\n:::\n\n\n:::\n\n:::: {#enum style=\"max-width: 20vw; display: flex; justify-self: center; margin-bottom: 1rem; flex-shrink: 1\"}\n\n::: table-flex\n\n\n::: {#tbl-wc .cell tbl-cap='How the WMO codes are\n associated to weather events.'}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"nrdkluoglu\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#nrdkluoglu table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#nrdkluoglu thead, #nrdkluoglu tbody, #nrdkluoglu tfoot, #nrdkluoglu tr, #nrdkluoglu td, #nrdkluoglu th {\n  border-style: none;\n}\n\n#nrdkluoglu p {\n  margin: 0;\n  padding: 0;\n}\n\n#nrdkluoglu .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: 1px;\n  margin-right: 1px;\n  color: #FFFFFF;\n  font-size: 85%;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #222222;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#nrdkluoglu .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#nrdkluoglu .gt_title {\n  color: #FFFFFF;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #222222;\n  border-bottom-width: 0;\n}\n\n#nrdkluoglu .gt_subtitle {\n  color: #FFFFFF;\n  font-size: 110%;\n  font-weight: initial;\n  padding-top: 9px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #222222;\n  border-top-width: 0;\n}\n\n#nrdkluoglu .gt_heading {\n  background-color: #222222;\n  text-align: center;\n  border-bottom-color: #222222;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#nrdkluoglu .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nrdkluoglu .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n}\n\n#nrdkluoglu .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#nrdkluoglu .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#nrdkluoglu .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#nrdkluoglu .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#nrdkluoglu .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#nrdkluoglu .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#nrdkluoglu .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#nrdkluoglu .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#nrdkluoglu .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#nrdkluoglu .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#nrdkluoglu .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-left-style: none;\n  border-left-width: 0px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#nrdkluoglu .gt_stub {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: bolder;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nrdkluoglu .gt_stub_row_group {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#nrdkluoglu .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#nrdkluoglu .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#nrdkluoglu .gt_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nrdkluoglu .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#nrdkluoglu .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#nrdkluoglu .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nrdkluoglu .gt_grand_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nrdkluoglu .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#nrdkluoglu .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nrdkluoglu .gt_striped {\n  background-color: #333333;\n}\n\n#nrdkluoglu .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n}\n\n#nrdkluoglu .gt_footnotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nrdkluoglu .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nrdkluoglu .gt_sourcenotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nrdkluoglu .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nrdkluoglu .gt_left {\n  text-align: left;\n}\n\n#nrdkluoglu .gt_center {\n  text-align: center;\n}\n\n#nrdkluoglu .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#nrdkluoglu .gt_font_normal {\n  font-weight: normal;\n}\n\n#nrdkluoglu .gt_font_bold {\n  font-weight: bold;\n}\n\n#nrdkluoglu .gt_font_italic {\n  font-style: italic;\n}\n\n#nrdkluoglu .gt_super {\n  font-size: 65%;\n}\n\n#nrdkluoglu .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#nrdkluoglu .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#nrdkluoglu .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#nrdkluoglu .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#nrdkluoglu .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#nrdkluoglu .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#nrdkluoglu .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#nrdkluoglu .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#nrdkluoglu div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"2\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Weather Code: As Data Type</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Code\">Code<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Description\">Description<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #5E81AC; color: #FFFFFF;\">0</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #5E81AC; color: #FFFFFF;\">Clear sky</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #6C89A1; color: #FFFFFF;\">1</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #6C89A1; color: #FFFFFF;\">Mainly clear</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #789297; color: #FFFFFF;\">2</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #789297; color: #FFFFFF;\">Partly cloudy</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #829B8B; color: #FFFFFF;\">3</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #829B8B; color: #FFFFFF;\">Overcast</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #8BA480; color: #FFFFFF;\">45</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #8BA480; color: #FFFFFF;\">Fog</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #96A178; color: #FFFFFF;\">48</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #96A178; color: #FFFFFF;\">Depositing rime fog</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #A39375; color: #FFFFFF;\">51</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #A39375; color: #FFFFFF;\">Drizzle: light</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #AE8371; color: #FFFFFF;\">53</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #AE8371; color: #FFFFFF;\">Drizzle: moderate</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #B7736E; color: #FFFFFF;\">55</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #B7736E; color: #FFFFFF;\">Drizzle: dense</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #BF616A; color: #FFFFFF;\">56</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #BF616A; color: #FFFFFF;\">Freezing drizzle: light</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #CA7B5F; color: #FFFFFF;\">57</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #CA7B5F; color: #FFFFFF;\">Freezing drizzle: dense</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #D39452; color: #FFFFFF;\">61</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #D39452; color: #FFFFFF;\">Rain: slight</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #DCAD40; color: #000000;\">63</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #DCAD40; color: #000000;\">Rain: moderate</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #E4C625; color: #000000;\">65</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #E4C625; color: #000000;\">Rain: heavy</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #DBC312; color: #000000;\">66</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #DBC312; color: #000000;\">Freezing rain: light</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #C3A620; color: #000000;\">67</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #C3A620; color: #000000;\">Freezing rain: heavy</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #AB8926; color: #FFFFFF;\">71</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #AB8926; color: #FFFFFF;\">Snow fall: slight</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #946E29; color: #FFFFFF;\">73</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #946E29; color: #FFFFFF;\">Snow fall: moderate</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #7D5329; color: #FFFFFF;\">75</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #7D5329; color: #FFFFFF;\">Snow fall: heavy</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #96612D; color: #FFFFFF;\">77</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #96612D; color: #FFFFFF;\">Snow grains</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #B07030; color: #FFFFFF;\">80</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #B07030; color: #FFFFFF;\">Rain showers: slight</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #CB7E33; color: #FFFFFF;\">81</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #CB7E33; color: #FFFFFF;\">Rain showers: moderate</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #E68D37; color: #FFFFFF;\">82</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #E68D37; color: #FFFFFF;\">Rain showers: violent</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #EA9D46; color: #000000;\">85</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #EA9D46; color: #000000;\">Snow showers: slight</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #D4AA60; color: #000000;\">86</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #D4AA60; color: #000000;\">Snow showers: heavy</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #BAB779; color: #000000;\">95</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #BAB779; color: #000000;\">Thunderstorm: slight or moderate</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #98C292; color: #000000;\">96</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #98C292; color: #000000;\">Thunderstorm with slight hail</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #66CDAA; color: #000000;\">99</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #66CDAA; color: #000000;\">Thunderstorm with heavy hail</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"2\"><span data-qmd-base64=\"PHN0cm9uZz5zb3VyY2U8L3N0cm9uZz46IFdvcmxkIE1ldGVvcmxvZ2ljYWwgT3JnYW5pemF0aW9u\"><span class='gt_from_md'><strong>source</strong>: World Meteorlogical Organization</span></span></td>\n    </tr>\n  </tfoot>\n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> World Meteorlogical Organization (WMO) code.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span> Type of meterological event.</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n::::\n\n# Modeling Weather\n\n::: p-1\nThe study, published in the *Weather and Forecasting* journal, focuses on evaluating and improving the accuracy of weather prediction models, particularly for severe weather events. It examines the performance of high-resolution numerical weather prediction (NWP) models in forecasting convective storms, which are critical for predicting severe weather such as thunderstorms, hail, and tornadoes. The research highlights advancements in model resolution, data assimilation techniques, and the integration of observational data to enhance forecast precision. The findings emphasize the importance of these improvements for short-term (nowcasting) and medium-range forecasts, particularly in regions prone to severe weather, like the central United States (including Missouri). @dowell_high-resolution_2022\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"table setup\"}\n# Create the tibble\nforecast_models <- tibble(\n     Model = c(\"GFS\", \"HRRR\"),\n     Developed_By = c(\n          \"NOAA (National Oceanic and Atmospheric Administration)\",\n          \"NOAA (specifically by the Earth System Research Laboratory)\"\n     ),\n     Scope = c(\n          \"Global\",\n          \"Regional (primarily focused on the contiguous United States)\"\n     ),\n     Resolution = c(\n          \"Lower resolution compared to HRRR (approximately 13 km as of recent updates)\",\n          \"High resolution (3 km)\"\n     ),\n     Forecast_Range = c(\"Up to 16 days\", \"Up to 18 hours\"),\n     Updates = c(\"Runs four times a day (00Z, 06Z, 12Z, 18Z)\", \"Runs every hour\"),\n     Applications = c(\n          \"Used for long-term weather forecasting, climate modeling, and global weather patterns.\",\n          \"Ideal for short-term, detailed weather forecasting, including severe weather events like thunderstorms, tornadoes, and localized precipitation.\"\n     )\n)\n\nlocations_list = colnames(forecast_models)\n\nnotes_list =  list(\n     \"\",\n  \"Organization or entity responsible for developing the model.\",\n  \"Geographical coverage of the model (e.g., global or regional).\",\n  \"Spatial resolution of the model, indicating the level of detail in the forecasts.\",\n  \"Time period for which the model provides forecasts.\",\n  \"Frequency at which the model is updated with new data.\",\n  \"Primary uses and strengths of the model in weather forecasting.\"\n  )\n\nfootnotes_df <- tibble(\n  notes = notes_list, \n  locations = locations_list)\n\npal_df <- tibble(\n  cols = locations_list\n#  pals = list(eval_palette(\"viridis::viridis\", 2, 'c', 1))\n)\n\nrTable <- r_table_theming(\nforecast_models,\ntitle = \"Forecast Models: Attributes\",\nsubtitle = NULL,\nfootnotes_df,\nsource_note = md(\"**source**: \"),\npal_df,\nmultiline_feet = TRUE,\ntbl_font_size = pct(85),\ntarget_everything = TRUE,\nrow_name_col = \"Model\"\n)\n```\n:::\n\n\n:::\n\n\n\n::: {#tbl-modelAttributes .cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"nbxyohpfgi\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#nbxyohpfgi table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#nbxyohpfgi thead, #nbxyohpfgi tbody, #nbxyohpfgi tfoot, #nbxyohpfgi tr, #nbxyohpfgi td, #nbxyohpfgi th {\n  border-style: none;\n}\n\n#nbxyohpfgi p {\n  margin: 0;\n  padding: 0;\n}\n\n#nbxyohpfgi .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: 1px;\n  margin-right: 1px;\n  color: #FFFFFF;\n  font-size: 85%;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #222222;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#nbxyohpfgi .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#nbxyohpfgi .gt_title {\n  color: #FFFFFF;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #222222;\n  border-bottom-width: 0;\n}\n\n#nbxyohpfgi .gt_subtitle {\n  color: #FFFFFF;\n  font-size: 110%;\n  font-weight: initial;\n  padding-top: 9px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #222222;\n  border-top-width: 0;\n}\n\n#nbxyohpfgi .gt_heading {\n  background-color: #222222;\n  text-align: center;\n  border-bottom-color: #222222;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#nbxyohpfgi .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nbxyohpfgi .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n}\n\n#nbxyohpfgi .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#nbxyohpfgi .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#nbxyohpfgi .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#nbxyohpfgi .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#nbxyohpfgi .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#nbxyohpfgi .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#nbxyohpfgi .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#nbxyohpfgi .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#nbxyohpfgi .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#nbxyohpfgi .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#nbxyohpfgi .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-left-style: none;\n  border-left-width: 0px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#nbxyohpfgi .gt_stub {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: bolder;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nbxyohpfgi .gt_stub_row_group {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#nbxyohpfgi .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#nbxyohpfgi .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#nbxyohpfgi .gt_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nbxyohpfgi .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#nbxyohpfgi .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#nbxyohpfgi .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nbxyohpfgi .gt_grand_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nbxyohpfgi .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#nbxyohpfgi .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nbxyohpfgi .gt_striped {\n  background-color: #333333;\n}\n\n#nbxyohpfgi .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n}\n\n#nbxyohpfgi .gt_footnotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nbxyohpfgi .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nbxyohpfgi .gt_sourcenotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nbxyohpfgi .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nbxyohpfgi .gt_left {\n  text-align: left;\n}\n\n#nbxyohpfgi .gt_center {\n  text-align: center;\n}\n\n#nbxyohpfgi .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#nbxyohpfgi .gt_font_normal {\n  font-weight: normal;\n}\n\n#nbxyohpfgi .gt_font_bold {\n  font-weight: bold;\n}\n\n#nbxyohpfgi .gt_font_italic {\n  font-style: italic;\n}\n\n#nbxyohpfgi .gt_super {\n  font-size: 65%;\n}\n\n#nbxyohpfgi .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#nbxyohpfgi .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#nbxyohpfgi .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#nbxyohpfgi .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#nbxyohpfgi .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#nbxyohpfgi .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#nbxyohpfgi .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#nbxyohpfgi .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#nbxyohpfgi div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"7\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Forecast Models: Attributes</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"a::stub\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Developed_By\">Developed_By<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Scope\">Scope<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Resolution\">Resolution<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>3</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Forecast_Range\">Forecast_Range<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>4</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Updates\">Updates<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>5</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Applications\">Applications<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>6</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">GFS</th>\n<td headers=\"stub_1_1 Developed_By\" class=\"gt_row gt_left\">NOAA (National Oceanic and Atmospheric Administration)</td>\n<td headers=\"stub_1_1 Scope\" class=\"gt_row gt_left\">Global</td>\n<td headers=\"stub_1_1 Resolution\" class=\"gt_row gt_left\">Lower resolution compared to HRRR (approximately 13 km as of recent updates)</td>\n<td headers=\"stub_1_1 Forecast_Range\" class=\"gt_row gt_left\">Up to 16 days</td>\n<td headers=\"stub_1_1 Updates\" class=\"gt_row gt_left\">Runs four times a day (00Z, 06Z, 12Z, 18Z)</td>\n<td headers=\"stub_1_1 Applications\" class=\"gt_row gt_left\">Used for long-term weather forecasting, climate modeling, and global weather patterns.</td></tr>\n    <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub  gt_striped\">HRRR</th>\n<td headers=\"stub_1_2 Developed_By\" class=\"gt_row gt_left gt_striped\">NOAA (specifically by the Earth System Research Laboratory)</td>\n<td headers=\"stub_1_2 Scope\" class=\"gt_row gt_left gt_striped\">Regional (primarily focused on the contiguous United States)</td>\n<td headers=\"stub_1_2 Resolution\" class=\"gt_row gt_left gt_striped\">High resolution (3 km)</td>\n<td headers=\"stub_1_2 Forecast_Range\" class=\"gt_row gt_left gt_striped\">Up to 18 hours</td>\n<td headers=\"stub_1_2 Updates\" class=\"gt_row gt_left gt_striped\">Runs every hour</td>\n<td headers=\"stub_1_2 Applications\" class=\"gt_row gt_left gt_striped\">Ideal for short-term, detailed weather forecasting, including severe weather events like thunderstorms, tornadoes, and localized precipitation.</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"7\"><span data-qmd-base64=\"PHN0cm9uZz5zb3VyY2U8L3N0cm9uZz46\"><span class='gt_from_md'><strong>source</strong>:</span></span></td>\n    </tr>\n  </tfoot>\n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> Organization or entity responsible for developing the model.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span> Geographical coverage of the model (e.g., global or regional).</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>3</sup></span> Spatial resolution of the model, indicating the level of detail in the forecasts.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>4</sup></span> Time period for which the model provides forecasts.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>5</sup></span> Frequency at which the model is updated with new data.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>6</sup></span> Primary uses and strengths of the model in weather forecasting.</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"table setup\"}\nforecast_model_differences <- tibble(\n\"Resolution\" = c(\n\"HRRR has a much higher resolution than GFS, making it more accurate for short-term, localized forecasts.\"\n),\n\"Forecast_Range\" = c(\"GFS provides forecasts for a much longer period compared to HRRR.\"),\n\"Update_Frequency\" =  c(\n\"HRRR updates more frequently, which is crucial for capturing rapidly changing weather conditions.\"\n)\n)\n\nlocations_list = colnames(forecast_model_differences)\n\nnotes_list =  list(\n  \"Spatial resolution of the model, indicating the level of detail in the forecasts.\",\n  \"Time period for which the model provides forecasts.\",\n  \"Frequency at which the model is updated with new data.\")\n\nfootnotes_df <- tibble(\n  notes = notes_list, \n  locations = locations_list)\n\npal_df <- tibble(\n  cols = locations_list\n#  pals = list(eval_palette(\"viridis::viridis\", 2, 'c', 1))\n)\n\nrTable <- r_table_theming(\nforecast_model_differences,\ntitle = \"Forecast Models: Differences\",\nsubtitle = NULL,\nfootnotes_df,\nsource_note = md(\"**source**: \"),\npal_df,\nmultiline_feet = TRUE,\ntbl_font_size = pct(85),\ntarget_everything = TRUE,\nrow_name_col = NULL\n)\n```\n:::\n\n\n:::\n\n\n\n::: {#tbl-modelDiffs .cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"caadpekyly\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#caadpekyly table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#caadpekyly thead, #caadpekyly tbody, #caadpekyly tfoot, #caadpekyly tr, #caadpekyly td, #caadpekyly th {\n  border-style: none;\n}\n\n#caadpekyly p {\n  margin: 0;\n  padding: 0;\n}\n\n#caadpekyly .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: 1px;\n  margin-right: 1px;\n  color: #FFFFFF;\n  font-size: 85%;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #222222;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#caadpekyly .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#caadpekyly .gt_title {\n  color: #FFFFFF;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #222222;\n  border-bottom-width: 0;\n}\n\n#caadpekyly .gt_subtitle {\n  color: #FFFFFF;\n  font-size: 110%;\n  font-weight: initial;\n  padding-top: 9px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #222222;\n  border-top-width: 0;\n}\n\n#caadpekyly .gt_heading {\n  background-color: #222222;\n  text-align: center;\n  border-bottom-color: #222222;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#caadpekyly .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #D3D3D3;\n}\n\n#caadpekyly .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n}\n\n#caadpekyly .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#caadpekyly .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#caadpekyly .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#caadpekyly .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#caadpekyly .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#caadpekyly .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#caadpekyly .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#caadpekyly .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#caadpekyly .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#caadpekyly .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#caadpekyly .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-left-style: none;\n  border-left-width: 0px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#caadpekyly .gt_stub {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: bolder;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#caadpekyly .gt_stub_row_group {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#caadpekyly .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#caadpekyly .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#caadpekyly .gt_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#caadpekyly .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#caadpekyly .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#caadpekyly .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#caadpekyly .gt_grand_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#caadpekyly .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#caadpekyly .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#caadpekyly .gt_striped {\n  background-color: #333333;\n}\n\n#caadpekyly .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n}\n\n#caadpekyly .gt_footnotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#caadpekyly .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#caadpekyly .gt_sourcenotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#caadpekyly .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#caadpekyly .gt_left {\n  text-align: left;\n}\n\n#caadpekyly .gt_center {\n  text-align: center;\n}\n\n#caadpekyly .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#caadpekyly .gt_font_normal {\n  font-weight: normal;\n}\n\n#caadpekyly .gt_font_bold {\n  font-weight: bold;\n}\n\n#caadpekyly .gt_font_italic {\n  font-style: italic;\n}\n\n#caadpekyly .gt_super {\n  font-size: 65%;\n}\n\n#caadpekyly .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#caadpekyly .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#caadpekyly .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#caadpekyly .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#caadpekyly .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#caadpekyly .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#caadpekyly .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#caadpekyly .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#caadpekyly div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"3\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Forecast Models: Differences</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Resolution\">Resolution<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Forecast_Range\">Forecast_Range<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Update_Frequency\">Update_Frequency<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>3</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Resolution\" class=\"gt_row gt_left\">HRRR has a much higher resolution than GFS, making it more accurate for short-term, localized forecasts.</td>\n<td headers=\"Forecast_Range\" class=\"gt_row gt_left\">GFS provides forecasts for a much longer period compared to HRRR.</td>\n<td headers=\"Update_Frequency\" class=\"gt_row gt_left\">HRRR updates more frequently, which is crucial for capturing rapidly changing weather conditions.</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"3\"><span data-qmd-base64=\"PHN0cm9uZz5zb3VyY2U8L3N0cm9uZz46\"><span class='gt_from_md'><strong>source</strong>:</span></span></td>\n    </tr>\n  </tfoot>\n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> Spatial resolution of the model, indicating the level of detail in the forecasts.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span> Time period for which the model provides forecasts.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>3</sup></span> Frequency at which the model is updated with new data.</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n## Weather Condition Analysis\n\n### FROM to Table\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"table setup\"}\nr_df <- tbl(\nduckdb_con, \"hourly_historical_weather\") |>\ndplyr::select(!'visibility') |>\ndplyr::slice_sample(n = 20) |>\ndplyr::collect() |>\ndplyr::mutate(\ndate = as.character.POSIXt(date),\ndate = forcats::as_factor(date)\n)\n\nlocations_list = colnames(r_df)\n\nnotes_list <- c(\n  \"Date and time in POSIXt.\",\n  \"Temperature at 2 meters above the ground in Fahrenheit.\",\n  \"Total precipitation in inches.\",\n  \"Rain precipitation in inches.\",\n  \"Snowfall in inches.\",\n  \"Snow depth in inches.\",\n  #\"Visibility in miles.\",\n  \"Weather code indicating the current weather condition.\",\n  \"Wind speed at 10 meters above the ground in miles per hour.\",\n  \"Wind direction at 10 meters above the ground in degrees.\"\n)\n\nfootnotes_df <- tibble(\n  notes = notes_list, \n  locations = locations_list\n)\n\npal_df <- tibble(\n  cols = locations_list,\n  pals = list(eval_palette(\"grDevices::Greens 3\", , 'c', -1))\n)\n\nrTable <- r_table_theming(\nr_df,\ntitle = \"Historical View\",\nsubtitle = NULL,\nfootnotes_df,\nsource_note = md(\"**source**: \"),\npal_df,\nmultiline_feet = TRUE,\ntbl_font_size = pct(85)\n)\n```\n:::\n\n\n:::\n\n::: table-flex\n\n\n::: {#tbl-historicalSample .cell .column-page}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"zfhvmzbwxb\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#zfhvmzbwxb table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#zfhvmzbwxb thead, #zfhvmzbwxb tbody, #zfhvmzbwxb tfoot, #zfhvmzbwxb tr, #zfhvmzbwxb td, #zfhvmzbwxb th {\n  border-style: none;\n}\n\n#zfhvmzbwxb p {\n  margin: 0;\n  padding: 0;\n}\n\n#zfhvmzbwxb .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: 1px;\n  margin-right: 1px;\n  color: #FFFFFF;\n  font-size: 85%;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #222222;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#zfhvmzbwxb .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#zfhvmzbwxb .gt_title {\n  color: #FFFFFF;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #222222;\n  border-bottom-width: 0;\n}\n\n#zfhvmzbwxb .gt_subtitle {\n  color: #FFFFFF;\n  font-size: 110%;\n  font-weight: initial;\n  padding-top: 9px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #222222;\n  border-top-width: 0;\n}\n\n#zfhvmzbwxb .gt_heading {\n  background-color: #222222;\n  text-align: center;\n  border-bottom-color: #222222;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#zfhvmzbwxb .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zfhvmzbwxb .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n}\n\n#zfhvmzbwxb .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#zfhvmzbwxb .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#zfhvmzbwxb .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#zfhvmzbwxb .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#zfhvmzbwxb .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#zfhvmzbwxb .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#zfhvmzbwxb .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#zfhvmzbwxb .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#zfhvmzbwxb .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#zfhvmzbwxb .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#zfhvmzbwxb .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-left-style: none;\n  border-left-width: 0px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#zfhvmzbwxb .gt_stub {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: bolder;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zfhvmzbwxb .gt_stub_row_group {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#zfhvmzbwxb .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#zfhvmzbwxb .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#zfhvmzbwxb .gt_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zfhvmzbwxb .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#zfhvmzbwxb .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#zfhvmzbwxb .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zfhvmzbwxb .gt_grand_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zfhvmzbwxb .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#zfhvmzbwxb .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zfhvmzbwxb .gt_striped {\n  background-color: #333333;\n}\n\n#zfhvmzbwxb .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n}\n\n#zfhvmzbwxb .gt_footnotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zfhvmzbwxb .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zfhvmzbwxb .gt_sourcenotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zfhvmzbwxb .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zfhvmzbwxb .gt_left {\n  text-align: left;\n}\n\n#zfhvmzbwxb .gt_center {\n  text-align: center;\n}\n\n#zfhvmzbwxb .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#zfhvmzbwxb .gt_font_normal {\n  font-weight: normal;\n}\n\n#zfhvmzbwxb .gt_font_bold {\n  font-weight: bold;\n}\n\n#zfhvmzbwxb .gt_font_italic {\n  font-style: italic;\n}\n\n#zfhvmzbwxb .gt_super {\n  font-size: 65%;\n}\n\n#zfhvmzbwxb .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#zfhvmzbwxb .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#zfhvmzbwxb .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#zfhvmzbwxb .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#zfhvmzbwxb .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#zfhvmzbwxb .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#zfhvmzbwxb .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#zfhvmzbwxb .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#zfhvmzbwxb div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"9\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Historical View</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"date\">date<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"temperature_2m\">temperature_2m<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"precipitation\">precipitation<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>3</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"rain\">rain<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>4</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"snowfall\">snowfall<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>5</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"snow_depth\">snow_depth<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>6</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"weather_code\">weather_code<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>7</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"wind_speed_10m\">wind_speed_10m<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>8</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"wind_direction_10m\">wind_direction_10m<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>9</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #F9F9F9; color: #000000;\">2019-01-05 05:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #BEE6C6; color: #000000;\">36.3560</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #81C891; color: #000000;\">7.595924</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #0E7736; color: #FFFFFF;\">283.62701</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #F0F8F1; color: #000000;\">2005-10-28 18:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #4FB16A; color: #FFFFFF;\">56.0966</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">2.237000</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #CAEBD0; color: #000000;\">90.00000</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #E7F6EA; color: #000000;\">1992-10-10 19:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #198D42; color: #FFFFFF;\">65.6366</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F6F9F6; color: #000000;\">1</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #03642A; color: #FFFFFF;\">12.545163</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #097031; color: #FFFFFF;\">291.99118</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #DBF2DF; color: #000000;\">2004-10-11 14:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #4BAF67; color: #FFFFFF;\">56.6366</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #EFF8F1; color: #000000;\">3</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #38A85A; color: #FFFFFF;\">9.556468</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #E2F5E6; color: #000000;\">57.42595</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #CEEDD4; color: #000000;\">1986-07-06 14:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #004717; color: #FFFFFF;\">81.2966</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #63B979; color: #000000;\">8.518242</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #62B978; color: #000000;\">193.67133</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #C0E6C7; color: #000000;\">1996-07-07 15:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #004C1A; color: #FFFFFF;\">80.2166</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F6F9F6; color: #000000;\">1</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #C5E9CB; color: #000000;\">5.071630</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #2AA453; color: #FFFFFF;\">228.57643</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #B1DFBA; color: #000000;\">2019-11-19 06:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #97D3A4; color: #000000;\">44.3660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #004616; color: #FFFFFF;\">0.01968504</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #004616; color: #FFFFFF;\">0.01968504</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #004616; color: #FFFFFF;\">53</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #B8E3C0; color: #000000;\">5.610367</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #6DBE80; color: #000000;\">184.57384</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #A1D8AC; color: #000000;\">2023-06-27 03:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #0A7032; color: #FFFFFF;\">72.0860</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #D1EED6; color: #000000;\">4.529580</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #004717; color: #FFFFFF;\">339.77505</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #90D09D; color: #000000;\">2007-03-16 05:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #92D09F; color: #000000;\">45.4766</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #EFF8F1; color: #000000;\">3</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #57B46F; color: #FFFFFF;\">8.849589</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">16.14441</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #7DC68E; color: #000000;\">2007-03-16 23:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #95D2A2; color: #000000;\">44.8466</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #51B16B; color: #FFFFFF;\">8.984278</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #004616; color: #FFFFFF;\">341.11380</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #69BD7E; color: #000000;\">1983-02-13 22:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #88CC97; color: #000000;\">47.1866</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #C6EACD; color: #000000;\">5.002084</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #8FCF9D; color: #000000;\">153.43501</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #53B26D; color: #FFFFFF;\">1992-04-26 05:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #97D3A4; color: #000000;\">44.3966</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F3F8F4; color: #000000;\">2</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #71C084; color: #000000;\">8.105845</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #015722; color: #FFFFFF;\">320.59937</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #39A85A; color: #FFFFFF;\">2022-03-04 02:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #B3E1BC; color: #000000;\">38.7860</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #1A9044; color: #FFFFFF;\">10.672153</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #E2F5E6; color: #000000;\">56.97613</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #1E9C4B; color: #FFFFFF;\">2009-05-28 17:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #2FA555; color: #FFFFFF;\">59.7866</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #127D39; color: #FFFFFF;\">0.01574803</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #127D39; color: #FFFFFF;\">0.01574803</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #01501D; color: #FFFFFF;\">51</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #1FA04D; color: #FFFFFF;\">10.004169</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #004C1A; color: #FFFFFF;\">333.43503</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #198E43; color: #FFFFFF;\">1989-09-17 03:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #1A9145; color: #FFFFFF;\">64.6466</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F3F8F4; color: #000000;\">2</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #F5F8F6; color: #000000;\">2.501042</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #1D9849; color: #FFFFFF;\">243.43501</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #13803B; color: #FFFFFF;\">2009-06-16 18:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #014E1C; color: #FFFFFF;\">79.6766</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #EFF8F1; color: #000000;\">3</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #AEDEB7; color: #000000;\">6.023307</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #49AE65; color: #FFFFFF;\">211.32863</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #0A7132; color: #FFFFFF;\">2008-02-20 14:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">19.8266</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F6F9F6; color: #000000;\">1</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #004616; color: #FFFFFF;\">13.798864</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #004717; color: #FFFFFF;\">340.09616</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #03632A; color: #FFFFFF;\">2006-07-27 07:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #004616; color: #FFFFFF;\">81.5666</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #1E9B4B; color: #FFFFFF;\">10.204741</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #51B16B; color: #FFFFFF;\">206.00330</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #015420; color: #FFFFFF;\">1989-06-03 08:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #127D3A; color: #FFFFFF;\">69.1466</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #EFF8F1; color: #000000;\">3</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #D8F1DD; color: #000000;\">4.179060</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #5FB876; color: #000000;\">195.52417</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #004616; color: #FFFFFF;\">2010-04-07 21:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #14813C; color: #FFFFFF;\">68.2466</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #0E7836; color: #FFFFFF;\">11.709579</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #178740; color: #FFFFFF;\">263.41815</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"9\"><span data-qmd-base64=\"PHN0cm9uZz5zb3VyY2U8L3N0cm9uZz46\"><span class='gt_from_md'><strong>source</strong>:</span></span></td>\n    </tr>\n  </tfoot>\n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> Date and time in POSIXt.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span> Temperature at 2 meters above the ground in Fahrenheit.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>3</sup></span> Total precipitation in inches.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>4</sup></span> Rain precipitation in inches.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>5</sup></span> Snowfall in inches.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>6</sup></span> Snow depth in inches.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>7</sup></span> Weather code indicating the current weather condition.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>8</sup></span> Wind speed at 10 meters above the ground in miles per hour.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>9</sup></span> Wind direction at 10 meters above the ground in degrees.</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n\n### GGplot Testing\n\n::: {#fig-weather layout-ncol=\"3\" fig-cap=\"These are the grouped figures.\"}\n\n\n::: {.cell lightbox='{\"group\":\"weather\",\"description\":\"Simple weather codes for simple insights.\"}'}\n::: {.cell-output-display}\n![Weather Codes](index_files/figure-html/fig-weather_codes-1.png){#fig-weather_codes width=672}\n:::\n:::\n\n::: {.cell lightbox='{\"group\":\"weather\",\"description\":\"Temperature with freezing point indicators.\"}'}\n::: {.cell-output-display}\n![Freezing/Non-Freezing Temperature](index_files/figure-html/fig-temperature_freezing-1.png){#fig-temperature_freezing width=672}\n:::\n:::\n\n::: {.cell lightbox='{\"group\":\"weather\",\"description\":\"Visibility in kilometers.\"}'}\n::: {.cell-output-display}\n![Visibility (km)](index_files/figure-html/fig-visibility_km-1.png){#fig-visibility_km width=672}\n:::\n:::\n\n::: {.cell lightbox='{\"group\":\"weather\",\"description\":\"Simple visiblity categories.\"}'}\n::: {.cell-output-display}\n![Visibility Categories](index_files/figure-html/fig-visibility_categories-1.png){#fig-visibility_categories width=672}\n:::\n:::\n\n::: {.cell lightbox='{\"group\":\"weather\",\"description\":\"Indicator for rain and or snowfall.\"}'}\n::: {.cell-output-display}\n![Precipitation (empty if no precipitation)](index_files/figure-html/fig-precipitation-1.png){#fig-precipitation width=672}\n:::\n:::\n\n::: {.cell lightbox='{\"group\":\"weather\",\"description\":\"Wind direction and speed.\"}'}\n::: {.cell-output-display}\n![Wind Rose](index_files/figure-html/fig-wind_rose-1.png){#fig-wind_rose width=672}\n:::\n:::\n\n\n:::\n\n@fig-weather\n\n@fig-weather_codes\n\n@fig-temperature_freezing\n\n@fig-visibility_km\n\n@fig-visibility_categories\n\n@fig-precipitation\n\n@fig-wind_rose\n\n# Disconnect From Databases\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Dereference memory from the in-memory database connections.\"}\n#dbDisconnect(mssql_con)\ndbDisconnect(duckdb_con)\n```\n:::\n\n\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}