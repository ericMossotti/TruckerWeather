{
  "hash": "2a40c3c12e4d9cf55c534443a7747dda",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Weather Assistant\"\n\nbibliography: bibliography/references.bib\n\ncitation: false\ncitation-location: margin\ncitations-hover: true\n\ncode-copy: true\ncode-fold: true\ncode-link: true\ncode-overflow: wrap\ncode-tools: true\n\nfig-responsive: true\n\nlightbox: true\n\nsource: true\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## Database Connections\n\n### MSSQL\n\n\n\n\n\n\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Currently optional: Connects to a dockerized mssql database.\"}\n# Set up the connection\nmssql_con <- dbConnect(\n  odbc::odbc(),\n  driver = \"ODBC Driver 18 for SQL Server\", \n  server = \"localhost,1433\",               \n  database = \"TestDB\",                    \n  uid = \"sa\",                             \n  pwd = \"MyStr@ngPassw0rd11\",             \n  TrustServerCertificate = \"yes\"\n)\n```\n:::\n\n\n:::\n\n### DuckDB\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Establish a DuckDB, embedded database connection.\"}\nduckdb_con <- dbConnect(duckdb::duckdb(\n     config = list(max_memory = '24GB')), \":memory:\")\n```\n:::\n\n\n:::\n\n## Custom Output Tools\n\n### Tables\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"table building and theming\"}\n# Table Theming Script ----\n#' @description\n#' This script provides functions to create and theme tables using the `gt` package.\n#' It includes options for customizing colors, footnotes, and other stylistic elements.\n#' \n# eval_palette ----\n#' @description\n#' A helper function to evaluate color palettes using the `paletteer` package.\n#' @param pal_name The name of the palette to evaluate.\n#' @param n The number of colors to generate (default is 10).\n#' @param pal_type The type of palette (\"c\" for continuous, \"d\" for discrete, or \"dynamic\" for dynamic palettes).\n#' @param direction The direction of the palette (e.g., 1 for normal, -1 for reversed).\n#' \n#' @return A vector of colors corresponding to the specified palette.\n#' \n#' @example\n#' \\dontrun{\n#' colors <- eval_palette(\"ggsci::springfield_simpsons\", n = 5, pal_type = \"d\")\n#' }\n#' @export \neval_palette <- function(pal_name, n = 10, pal_type, direction = NULL) {\n     if (pal_type == \"c\") {\n          return(paletteer_c(pal_name, n, direction))\n     } else if (pal_type == \"d\") {\n          return(paletteer_d(pal_name, n, direction))\n     } else if (pal_type == \"dynamic\") {\n          return(paletteer_dynamic(pal_name, n, direction))\n     }\n}\n\n# r_table_theming ----\n#' @description\n#' The main function to create and theme a table using the `gt` package.\n#' @details\n#' **Color Coding** Applies color palettes to specific columns or the entire table.\n#' **Footnotes** Adds footnotes to specific columns or locations in the table.\n#' **Column Labels** Customizes the appearance of column labels, including background colors.\n#' **Table Styling** Applies various styling options, such as borders, padding, and font weights.\n#' **Shadow Effects** Optionally adds shadow effects to table body cells.\n#'\n#' @param r_df The data frame to be converted into a table.\n#' @param title The title of the table.\n#' @param subtitle The subtitle of the table.\n#' @param footnotes_df A data frame containing footnotes and their locations.\n#' @param source_note A source note to be added at the bottom of the table.\n#' @param pal_df A data frame containing color palettes and columns to apply them to.\n#' @param multiline_feet Whether footnotes should be multiline (default is NULL).\n#' @param tbl_font_size The font size of the table (default is NULL).\n#' @param color_by_columns Columns to apply color to (default is NULL).\n#' @param row_name_col The column to use as row names (default is NULL).\n#' @param do_col_labels Whether to apply custom styling to column labels (default is FALSE).\n#' @param target_everything Whether to apply color to all columns (default is FALSE).\n#' @param doBodyShadows Whether to apply shadow effects to table body cells (default is FALSE).\n#'\n#' @return A themed `gt` table object.\n#' \n#' @example \n#' \\dontrun{\n#'   data <- data.frame(\n#'     Name = c(\"Alice\", \"Bob\", \"Charlie\"),\n#'     Score = c(85, 92, 78)\n#'   )\n#'   pal_df <- data.frame(\n#'     cols = list(\"Score\"),\n#'     pals = list(eval_palette(\"ggsci::springfield_simpsons\", n = 3, pal_type = \"d\"))\n#'   )\n#'   footnotes_df <- data.frame(\n#'     notes = list(\"High score\"),\n#'     locations = list(\"Score\")\n#'   )\n#'   themed_table <- r_table_theming(\n#'     r_df = data,\n#'     title = \"Student Scores\",\n#'     subtitle = \"Fall 2023\",\n#'     footnotes_df = footnotes_df,\n#'     source_note = \"Source: School Records\",\n#'     pal_df = pal_df,\n#'     do_col_labels = TRUE\n#'   )\n#'   themed_table\n#'  }\n#'  \n# r_table_theming ----\n# Main function to create and theme a table using the `gt` package.\n#' @export\nr_table_theming <- function(r_df,\n                            title,\n                            subtitle,\n                            footnotes_df,\n                            source_note,\n                            pal_df,\n                            multiline_feet = NULL,\n                            tbl_font_size = NULL,\n                            color_by_columns = NULL,\n                            row_name_col = NULL,\n                            do_col_labels = FALSE,\n                            target_everything = FALSE,\n                            doBodyShadows = FALSE\n) {\n     # Initialize the gt table\n     if(is.null(row_name_col)) {\n          # If no row name column is specified, create a basic gt table\n          r_table <- gt(r_df)\n     } else {\n          # If a row name column is specified, use it as the row names in the table\n          r_table <- gt(r_df, rowname_col = row_name_col)\n     }\n     \n     # Apply color coding to specific columns or the entire table\n     if (nrow(r_df) > 1 && target_everything == FALSE) {\n          # Apply color palettes to specific columns defined in pal_df\n          r_table <- seq_len(nrow(pal_df)) |>\n               reduce(\\(acc, i) {\n                    data_color(acc,\n                               columns = pal_df$cols[[i]],  # Apply color to specified columns\n                               palette = pal_df$pals[[i]]   # Use the specified palette\n                    )\n               }, .init = r_table)  # Start with the initial table and accumulate changes\n     }\n     else if (nrow(r_df) > 1 && target_everything == TRUE) {\n          # Apply color palettes to all columns\n          r_table <- seq_len(nrow(pal_df)) |>\n               reduce(\\(acc, i) {\n                    data_color(\n                         acc,\n                         columns = color_by_columns,  # Apply color to specified columns\n                         palette = pal_df$pals[[i]],  # Use the specified palette\n                         target_columns = everything()  # Apply color to all columns\n                    )\n               }, .init = r_table)  # Start with the initial table and accumulate changes\n     }\n     \n     # Add footnotes to the table\n     r_table <- seq_len(nrow(footnotes_df)) |>\n          reduce(\\(acc, i) {\n               tab_footnote(\n                    acc,\n                    footnote = footnotes_df$notes[[i]],  # Add the footnote text\n                    location = cells_column_labels(\n                         columns = footnotes_df$locations[[i]]),  # Specify the column for the footnote\n                    placement = \"auto\"  # Automatically place the footnote\n               )\n          }, .init = r_table)  # Start with the initial table and accumulate changes\n     \n     # Apply custom styling to column labels (if enabled)\n     if (ncol(r_df) > 1 && do_col_labels == TRUE) {\n          cell_col_fills = pal_df$pals[[1]]  # Get the first palette for column labels\n          # Apply background colors to column labels\n          r_table <- seq_len(nrow(pal_df)) |>\n               reduce(\\(acc, i) {\n                    tab_style(\n                         acc,\n                         style = cell_fill(color = cell_col_fills[i]),  # Fill column labels with color\n                         locations = cells_column_labels(\n                              columns = pal_df$cols[[i]])  # Apply to specified columns\n                    )\n               }, .init = r_table)  # Start with the initial table and accumulate changes\n     }\n     \n     # Add a title and subtitle to the table\n     r_table <- r_table |>\n          tab_header(title = title, subtitle = subtitle)\n     \n     # Add a source note at the bottom of the table\n     r_table <- r_table |>\n          tab_source_note(source_note = source_note)\n     \n     # Apply general table styling options\n     r_table <- r_table |>\n          tab_options(\n               column_labels.padding = px(10),  # Add padding to column labels\n               column_labels.font.weight = \"bold\",  # Make column labels bold\n               column_labels.background.color = '#333',  # Set background color for column labels\n               column_labels.border.top.width = px(0),  # Remove top border for column labels\n               column_labels.border.bottom.color = 'black',  # Set bottom border color for column labels\n               column_labels.vlines.width = px(1),  # Set vertical line width for column labels\n               column_labels.border.lr.width = px(1),  # Set left/right border width for column labels\n               column_labels.border.bottom.width = px(0),  # Remove bottom border for column labels\n               column_labels.border.lr.color = 'black',  # Set left/right border color for column labels\n               column_labels.vlines.color = 'black',  # Set vertical line color for column labels\n               footnotes.padding = px(5),  # Add padding to footnotes\n               footnotes.background.color = '#222',  # Set background color for footnotes\n               footnotes.sep = \", \",  # Set separator for footnotes\n               footnotes.multiline = multiline_feet,  # Allow multiline footnotes (if enabled)\n               heading.padding = px(10),  # Add padding to the heading\n               heading.background.color = '#222',  # Set background color for the heading\n               heading.title.font.size = pct(125),  # Set font size for the title\n               heading.subtitle.font.size = pct(110),  # Set font size for the subtitle\n               heading.border.bottom.width = px(0),  # Remove bottom border for the heading\n               row.striping.include_table_body = TRUE,  # Enable row striping for the table body\n               row.striping.include_stub = TRUE,  # Enable row striping for the stub\n               row.striping.background_color = '#333',  # Set background color for striped rows\n               row_group.as_column = TRUE,  # Display row groups as columns\n               source_notes.background.color = '#222',  # Set background color for source notes\n               stub.border.width = px(0),  # Remove border for the stub\n               stub.font.weight = \"bolder\",  # Make stub text bolder\n               table.margin.left = px(1),  # Set left margin for the table\n               table.margin.right = px(1),  # Set right margin for the table\n               table.align = \"center\",  # Center-align the table\n               table.border.top.width = px(0),  # Remove top border for the table\n               table.border.bottom.width = px(0),  # Remove bottom border for the table\n               table.background.color = '#222',  # Set background color for the table\n               table.font.size = tbl_font_size,  # Set font size for the table\n               table.layout = \"auto\",  # Use automatic table layout\n               table_body.hlines.color = 'black',  # Set horizontal line color for the table body\n               table_body.hlines.width = px(0),  # Remove horizontal lines in the table body\n               table_body.vlines.width = px(0),  # Remove vertical lines in the table body\n               table_body.border.bottom.color = 'black',  # Set bottom border color for the table body\n               table_body.border.top.color = 'black',  # Set top border color for the table body\n               table_body.border.bottom.width = px(0),  # Remove bottom border for the table body\n               table_body.border.top.width = px(0)  # Remove top border for the table body\n          )\n     \n     return(r_table)\n}\n```\n:::\n\n\n:::\n\n#### Plots\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"plot theming\"}\n#  Plot output script ----\n# normal axes ----\nggplot_theming <- function(...) {\n     theme_minimal() +\n          theme(\n               axis.title = element_text(\n                    color = 'gray100',\n                    margin = margin(10, 10, 10, 10, \"pt\")\n               ),\n               axis.title.x = element_text(margin = margin(10, 10, 10, 10, \"pt\"), face = \"bold\"),\n               axis.title.y = element_text(\n                    face = \"bold\",\n                    size = rel(1),\n                    margin = margin(10, 10, 10, 10, \"pt\")\n               ),\n               axis.text = element_text(color = 'gray', margin = margin(5, 5, 5, 5, \"pt\")),\n               axis.text.x = element_text(),\n               axis.text.y = element_text(margin = margin(0, 5, 0, 5, \"pt\")),\n               axis.text.x.top = element_text(vjust = 0.5),\n               legend.background = element_rect(fill = '#222'),\n               legend.position = \"bottom\",\n               legend.text = element_text(color = 'gray'),\n               legend.title = element_text(color = 'white'),\n               panel.background = element_rect(fill = '#222'),\n               panel.grid.major.x = element_line(linetype = 'solid', color = 'black'),\n               panel.grid.minor.x = element_line(linetype = \"dotted\", color = 'black'),\n               panel.grid.major.y = element_line(\n                    linetype = 'solid',\n                    color = 'black',\n                    linewidth = .2\n               ),\n               panel.grid.minor.y = element_line(linetype = 'dotted', color = 'black'),\n               plot.title = element_text(\n                    face = \"bold\",\n                    color = 'white',\n                    size = rel(1.5)\n               ),\n               plot.background = element_rect(fill = '#222'),\n               plot.caption = element_text(\n                    size = 10,\n                    color = \"gray80\",\n                    margin = margin(5, 2, 5, 2),\n                    hjust = 0\n               ),\n               #plot.margin = margin(0, 0, 0, 0, \"pt\"),\n               strip.text.y = element_text(color = \"gray\"),\n               strip.text.x = element_text(color = \"gray\", face = \"bold\"),\n               text = element_text(size = 12)\n          )\n}\n\n# flipped axes ----\nggplot_theming_flipped_axes <- function(...) {\n     theme_minimal() +\n          theme(\n               axis.title = element_text(color = 'gray100'),\n               axis.text = element_text(color = 'gray'),\n               panel.background = element_rect(fill = '#222'),\n               panel.grid.major.x = element_line(linetype = 'dashed'),\n               panel.grid.minor.x = element_line(linetype = \"dotted\"),\n               panel.grid.major.y = element_line(linetype = 'solid'),\n               panel.grid.minor.y = element_line(linetype = 'dotted'),\n               plot.title = element_text(color = 'white', size = rel(2)),\n               plot.background = element_rect(fill = '#222'),\n               legend.background = element_rect(fill = '#222'),\n               legend.text = element_text(color = 'gray'),\n               legend.title = element_text(color = 'white')\n          )\n}\n```\n:::\n\n\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"plot building\"}\n# Load necessary libraries\nlibrary(DBI)          # For database connectivity\nlibrary(ggplot2)      # For creating plots\nlibrary(scales)       # For scaling and formatting axes\nlibrary(openair)      # For specialized plots like wind roses\nsource(\"./scripts/Output/Plots/plot_themer.R\")  # Custom theme for ggplot\n\n# Helper function to execute a query and return the result\nexecute_query <- function(con, query) {\n     dbGetQuery(con, query)  # Execute the SQL query and return the result\n}\n\n# 1 Day Temperature Trend ----\nplot_temperature_trend <- function(con, freezing_threshold = 32) {\n     # Query to fetch temperature data for the day\n     query <- \"\n    SELECT\n      temperature_2m,\n      strftime(date, '%H:%M:%S') AS time_only,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)  # Execute the query and get the data\n     \n     # Create a ggplot object for temperature trend\n     rPlot <- ggplot(data, aes(x = common_date, y = temperature_2m)) +\n          geom_line(color = \"black\", size = 0.5) +  # Line plot for temperature\n          geom_hline(\n               yintercept = freezing_threshold,\n               linetype = \"dashed\",\n               color = \"lightblue\",\n               linewidth = 0.4\n          ) +  # Horizontal line for freezing threshold\n          geom_ribbon(\n               aes(\n                    ymin = freezing_threshold,\n                    ymax = ifelse(\n                         temperature_2m > freezing_threshold,\n                         temperature_2m,\n                         freezing_threshold\n                    ),\n                    fill = \"above freezing\"\n               ),\n               alpha = 0.5,\n               na.rm = TRUE\n          ) +  # Ribbon for temperatures above freezing\n          geom_ribbon(\n               aes(\n                    ymin = ifelse(\n                         temperature_2m <= freezing_threshold,\n                         temperature_2m,\n                         freezing_threshold\n                    ),\n                    ymax = freezing_threshold,\n                    fill = \"at/below freezing\"\n               ),\n               alpha = 0.5,\n               na.rm = TRUE\n          ) +  # Ribbon for temperatures at/below freezing\n          labs(\n               title = \"Temperature Forecast\",\n               x = \"\",\n               y = \"° F\"\n          ) +  # Labels for the plot\n          scale_x_datetime(\n               labels = label_date(\"%l %p\"),\n               breaks = \"6 hours\",\n               minor_breaks = \"2 hours\",\n               guide = guide_axis(n.dodge = 1)\n          ) +  # Format x-axis for time\n          scale_y_continuous(sec.axis = dup_axis(name = \"\")) +  # Secondary y-axis\n          scale_fill_manual(\n               name = \"Freezing Indicators\",\n               values = c(\n                    \"above freezing\" = \"green\",\n                    \"below freezing\" = \"lightblue\"\n               )\n          ) +  # Manual color scale for freezing indicators\n          facet_grid(~ day) +  # Facet by day\n          ggplot_theming()  # Apply custom theme\n     \n     # Save the plot as a PNG file\n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggTemperature.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file and display it\n     img <- readPNG(plot_path)\n     grid::grid.raster(img)\n}\n\n# Precipitation and Probability ----\nplot_precipitation <- function(con) {\n     # Query to fetch precipitation data\n     query <- \"\n    SELECT\n      precipitation_probability,\n      precipitation,\n      rain,\n      snowfall,\n      strftime(date, '%H:%M:%S') AS time_only,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)  # Execute the query and get the data\n     \n     # Calculate scale factor for secondary y-axis\n     scale_factor <- max(data$precipitation_probability, \n                         na.rm = TRUE) / max(data$rain, \n                                             data$snowfall, na.rm = TRUE)\n     \n     # Create a ggplot object for precipitation\n     rPlot <- ggplot(data, aes(x = as.POSIXct(common_date))) +\n          geom_area(\n               aes(y = precipitation_probability, fill = \"Precipitation Probability\"),\n               linewidth = 0.2\n          ) +  # Area plot for precipitation probability\n          geom_line(\n               aes(y = rain * scale_factor, color = \"Rain (inches)\"),\n               size = 1,\n               linetype = \"dashed\"\n          ) +  # Line plot for rain\n          geom_line(\n               aes(y = snowfall * scale_factor, color = \"Snowfall (inches)\"),\n               size = 1,\n               linetype = \"dotted\"\n          ) +  # Line plot for snowfall\n          scale_y_continuous(\n               name = \"Precipitation Probability (%)\",\n               sec.axis = sec_axis( ~ . / ifelse(\n                    is.infinite(scale_factor), 1000, scale_factor\n               ), name = \"Rain / Snowfall (inches)\")\n          ) +  # Dual y-axes\n          scale_x_datetime(\n               labels = scales::date_format(\"%H:%M\"),\n               breaks = \"6 hours\",\n               minor_breaks = \"2 hour\",\n               guide = guide_axis(n.dodge = 1)\n          ) +  # Format x-axis for time\n          scale_color_manual(\n               name = \"Weather Condition\",\n               values = c(\n                    \"Rain (inches)\" = \"skyblue\",\n                    \"Snowfall (inches)\" = \"snow\"\n               )\n          ) +  # Manual color scale for weather conditions\n          scale_fill_manual(name = \"Chance of\",\n                            values = c(\"Precipitation Probability\" = \"gray20\")) +  # Fill color for precipitation probability\n          labs(title = \"Precipitation Forecast\", \n               x = \"Time of Day\", \n               y = \"Precipitation Probability (%)\") +  # Labels for the plot\n          facet_grid(~ day) +  # Facet by day\n          ggplot_theming()  # Apply custom theme\n     \n     # Save the plot as a PNG file\n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggPrecipitation.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file and display it\n     img <- readPNG(plot_path)\n     grid::grid.raster(img)\n     \n}\n\n# OpenAir Wind Rose ----\nplot_wind_rose <- function(con) {\n     # Query to fetch wind data\n     query <- \"\n    SELECT\n      wind_speed_10m,\n      wind_direction_10m,\n      strftime(date, '%H:%M:%S') AS time_only,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)  # Execute the query and get the data\n     \n     # Create a wind rose plot using the openair package\n     windRose(\n          data,\n          ws = \"wind_speed_10m\",\n          wd = \"wind_direction_10m\",\n          breaks = 5,\n          paddle = TRUE,\n          cols = paletteer_d(\"ggsci::springfield_simpsons\", n = 3),\n          key.position = \"left\"\n     )\n}\n\n# ggplot Wind Rose ----\nplot_wind_rose_ggplot <- function(con) {\n     # Query to fetch wind data\n     query <- \"\n    SELECT\n      wind_speed_10m,\n      wind_direction_10m,\n      strftime(date, '%H:%M:%S') AS time_only,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)  # Execute the query and get the data\n     \n     # Bin wind speeds into categories\n     data <- data |>\n          mutate(speed_bin = cut(\n               wind_speed_10m,\n               breaks = c(0, 2, 4, 6, 8, 10, Inf),\n               labels = c(\"0-2\", \"2-4\", \"4-6\", \"6-8\", \"8-10\", \"10+\")\n          ))\n     \n     # Create a wind rose plot using ggplot\n     rPlot <- ggplot(data, aes(x = wind_direction_10m, fill = speed_bin)) +\n          geom_histogram(binwidth = 10,\n                         color = \"black\",\n                         position = \"stack\") +  # Histogram for wind direction\n          coord_polar(start = 2 * pi) +  # Convert to polar coordinates\n          scale_x_continuous(limits = c(0, 360),\n                             breaks = seq(0, 360, by = 45)) +  # Format x-axis for degrees\n          labs(\n               title = \"Wind Rose\",\n               x = \"Wind Direction (°)\",\n               y = \"Frequency\",\n               fill = \"Wind Speed (m/s)\"\n          ) +  # Labels for the plot\n          ggplot_theming()  # Apply custom theme\n     \n     # Save the plot as a PNG file\n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggWindRose.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file and display it\n     img <- readPNG(plot_path)\n     grid::grid.raster(img)\n     \n}\n\n# Visibility geom_line ----\nplot_visibility_line <- function(con) {\n     # Query to fetch visibility data\n     query <- \"\n    SELECT\n      visibility,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)  # Execute the query and get the data\n     \n     # Create a ggplot object for visibility trend\n     rPlot <- ggplot(data, aes(x = common_date, y = visibility / 10 ^ 3)) +\n          geom_line(color = \"white\", size = 0.5) +  # Line plot for visibility\n          geom_point(color = \"gray\", alpha = 1) +  # Points for visibility\n          labs(title = \"Visibility Map\", x = \"Date\", y = \"Visibility (km)\") +  # Labels for the plot\n          scale_x_datetime(\n               labels = scales::date_format(\"%H:%M\"),\n               breaks = \"6 hours\",\n               minor_breaks = \"2 hour\",\n               guide = guide_axis(n.dodge = 1)\n          ) +  # Format x-axis for time\n          facet_grid(~ day) +  # Facet by day\n          ggplot_theming()  # Apply custom theme\n     \n     # Save the plot as a PNG file\n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggVisibilityLine.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file and display it\n     img <- readPNG(plot_path)\n     grid::grid.raster(img)\n     \n}\n\n# Visibility Non-Categorical Heat ----\nplot_visibility_heat <- function(con) {\n     # Query to fetch visibility data\n     query <- \"\n    SELECT\n      visibility,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)  # Execute the query and get the data\n     \n     # Create a ggplot object for visibility heatmap\n     rPlot <- ggplot(data, aes(\n          x = common_date,\n          y = day,\n          fill = visibility / 10 ^ 3\n     )) +\n          geom_tile() +  # Tile plot for visibility\n          scale_fill_viridis_c(option = \"magma\") +  # Color scale for visibility\n          labs(\n               title = \"Visibility (km)\",\n               x = \"Time of Day\",\n               y = \"Date\",\n               fill = \"Visibility (km)\"\n          ) +  # Labels for the plot\n          scale_x_datetime(\n               labels = scales::date_format(\"%H:%M\"),\n               breaks = \"6 hours\",\n               minor_breaks = \"2 hour\",\n               guide = guide_axis(n.dodge = 1)\n          ) +  # Format x-axis for time\n          ggplot_theming()  # Apply custom theme\n     \n     # Save the plot as a PNG file\n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggVisibilityHeat.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file and display it\n     img <- readPNG(plot_path)\n     grid::grid.raster(img)\n     \n}\n\n# Visibility Categorical Heat ----\nplot_visibility_categorical_heat <- function(con) {\n     # Query to fetch visibility data\n     query <- \"\n    SELECT\n      visibility,\n      strptime('1970-01-01 ' || strftime(date, '%H:%M:%S'), '%Y-%m-%d %H:%M:%S') AS common_date,\n      strftime(date, '%b %d') AS day\n    FROM\n      hourly_day_forecast;\n  \"\n     \n     data <- execute_query(con, query)  # Execute the query and get the data\n     \n     # Categorize visibility into different levels\n     data <- data |>\n          mutate(\n               visibility_category = case_when(\n                    visibility > 30 * 10 ^ 3 ~ \"Clearest (>30 km)\",\n                    visibility > 10 * 10 ^ 3 ~ \"Excellent (10-30 km)\",\n                    visibility > 5 * 10 ^ 3 ~ \"Good (5-10 km)\",\n                    visibility > 2 * 10 ^ 3 ~ \"Moderate (2-5 km)\",\n                    visibility > 1 * 10 ^ 3 ~ \"Low (1-2 km)\",\n                    TRUE ~ \"Fog/Haze (<1 km)\"\n               )\n          )\n     \n     # Create a ggplot object for categorical visibility heatmap\n     rPlot <- ggplot(data,\n                     aes(x = common_date, y = day, fill = visibility_category)) +\n          geom_tile() +  # Tile plot for visibility categories\n          scale_fill_manual(\n               values = c(\n                    \"Clearest (>30 km)\" = \"green\",\n                    \"Excellent (10-30 km)\" = \"darkgreen\",\n                    \"Good (5-10 km)\" = \"yellow\",\n                    \"Moderate (2-5 km)\" = \"orange\",\n                    \"Low (1-2 km)\" = \"red\",\n                    \"Fog/Haze (<1 km)\" = \"purple\"\n               )\n          ) +  # Manual color scale for visibility categories\n          labs(\n               title = \"Visibility Category Map\",\n               x = \"Time of Day\",\n               y = \"Date\",\n               fill = \"Visibility Level\"\n          ) +  # Labels for the plot\n          scale_x_datetime(\n               labels = scales::date_format(\"%H:%M\"),\n               breaks = \"6 hours\",\n               minor_breaks = \"2 hour\",\n               guide = guide_axis(n.dodge = 1)\n          ) +  # Format x-axis for time\n          ggplot_theming()  # Apply custom theme\n     \n     # Save the plot as a PNG file\n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggVisibilityCat.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file and display it\n     img <- readPNG(plot_path)\n     grid::grid.raster(img)\n}\n\n# Weather Codes ----\nplot_weather_codes <- function(con) {\n     # Query to fetch weather codes and descriptions\n     query <- \"\n    SELECT\n      hr.weather_code::INTEGER::TEXT::WeatherCode AS weather_code,\n      wc.Description AS description,\n      strftime(hr.date, '%H:%M:%S') AS time_only,\n      strftime(hr.date, '%b %d') AS day\n    FROM\n      hourly_day_forecast hr\n    LEFT JOIN WeatherCode wc ON wc.Code == hr.weather_code;\n  \"\n     \n     data <- execute_query(con, query)  # Execute the query and get the data\n     \n     # Convert time_only to POSIXct for plotting\n     data$time_only <- as.POSIXct(data$time_only, format = \"%H:%M:%S\")\n     \n     # Create a ggplot object for weather codes\n     rPlot <- ggplot(data, aes(x = day, y = time_only, fill = description)) +\n          geom_tile(alpha = 0.3) +  # Tile plot for weather codes\n          scale_fill_paletteer_d(\"khroma::highcontrast\") +  # Color scale for weather codes\n          scale_y_datetime(\n               date_labels = \"%H:%M\",\n               date_breaks = \"2 hours\",\n               sec.axis = dup_axis(name = \"\")\n          ) +  # Format y-axis for time\n          labs(\n               title = \"Weather Code Map\",\n               x = \"Day\",\n               y = \"Time of Day\",\n               fill = \"Weather Code\"\n          ) +  # Labels for the plot\n          ggplot_theming()  # Apply custom theme\n     \n     # Save the plot as a PNG file\n     base_path <- \"data/plots/\"\n     plot_path <- paste0(base_path, \"ggWeatherCodes.png\")\n     ggsave(plot_path, plot = rPlot, scale = 1.5)\n     \n     # Read the PNG file and display it\n     img <- readPNG(plot_path)\n     grid::grid.raster(img)\n     \n}\n```\n:::\n\n\n:::\n\n## Weather Data API Connection\n\n[@openMeteo_2025]\n\n### Import Hourly Data\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.python .cell-code  code-summary=\"Run the API script to import the dataset.\"}\nimport polars as pl  # For data manipulation and DataFrame creation\nimport pandas as pd  # For generating the date range\nimport requests_cache  # For caching API requests to reduce load and improve performance\nfrom retry_requests import retry  # For retrying failed API requests\nimport openmeteo_requests  # For interacting with the Open-Meteo API\nfrom datetime import datetime, timezone  # For handling date and time\n\ndef import_api_hourly(latitude: float, longitude: float) -> pl.DataFrame:\n    \"\"\"\n    Fetches hourly weather data from the Open-Meteo API for the given latitude and longitude.\n\n    Parameters:\n        latitude (float): The latitude of the location for which weather data is requested.\n        longitude (float): The longitude of the location for which weather data is requested.\n\n    Returns:\n        pl.DataFrame: A Polars DataFrame containing hourly weather data for the specified location.\n    \"\"\"\n    \n    # Setup the Open-Meteo API client with cache and retry on error\n    # Caching reduces the number of API calls by storing responses for 1 hour (3600 seconds)\n    cache_session = requests_cache.CachedSession('.cache', expire_after = 3600)\n    \n    # Retry mechanism: retry up to 5 times with exponential backoff if the request fails\n    retry_session = retry(cache_session, retries = 5, backoff_factor = 0.2)\n    \n    # Initialize the Open-Meteo API client with the cached and retry-enabled session\n    openmeteo = openmeteo_requests.Client(session = retry_session)\n    \n    # Define the API endpoint and parameters for the weather data request\n    url = \"https://api.open-meteo.com/v1/forecast\"\n    params = {\n        \"latitude\": latitude,  # Latitude of the location\n        \"longitude\": longitude,  # Longitude of the location\n        \"hourly\": [  # List of hourly weather variables to fetch\n            \"temperature_2m\",  # Temperature at 2 meters above ground\n            \"precipitation_probability\",  # Probability of precipitation\n            \"precipitation\",  # Total precipitation\n            \"rain\",  # Rain amount\n            \"showers\",  # Showers amount\n            \"snowfall\",  # Snowfall amount\n            \"snow_depth\",  # Snow depth\n            \"weather_code\",  # Weather condition code\n            \"visibility\",  # Visibility\n            \"wind_speed_10m\",  # Wind speed at 10 meters above ground\n            \"wind_direction_10m\"  # Wind direction at 10 meters above ground\n        ],\n        \"temperature_unit\": \"fahrenheit\",  # Temperature unit (Fahrenheit)\n        \"wind_speed_unit\": \"mph\",  # Wind speed unit (miles per hour)\n        \"precipitation_unit\": \"inch\",  # Precipitation unit (inches)\n        \"timezone\": \"America/Chicago\",  # Timezone for the data\n        \"forecast_days\": 1,  # Number of forecast days (1 day)\n        \"past_hours\": 6,  # Include past 6 hours of data\n        \"forecast_hours\": 24,  # Include next 24 hours of forecast\n        \"models\": \"best_match\"  # Use the best matching weather model\n    }\n    \n    # Make the API request to fetch weather data\n    responses = openmeteo.weather_api(url, params = params)\n    \n    # Process the first location in the response (only one location is requested)\n    response = responses[0]\n    \n    # Print location and timezone information for debugging\n    print(f\"Coordinates {response.Latitude()}°N {response.Longitude()}°E\")\n    print(f\"Elevation {response.Elevation()} m asl\")\n    print(f\"Timezone {response.Timezone()} {response.TimezoneAbbreviation()}\")\n    print(f\"Timezone difference to GMT+0 {response.UtcOffsetSeconds()} s\")\n    \n    # Process hourly data from the API response\n    hourly = response.Hourly()\n    \n    # Extract each hourly weather variable from the response\n    hourly_temperature_2m = hourly.Variables(0).ValuesAsNumpy()  # Temperature at 2m\n    hourly_precipitation_probability = hourly.Variables(1).ValuesAsNumpy()  # Precipitation probability\n    hourly_precipitation = hourly.Variables(2).ValuesAsNumpy()  # Total precipitation\n    hourly_rain = hourly.Variables(3).ValuesAsNumpy()  # Rain amount\n    hourly_showers = hourly.Variables(4).ValuesAsNumpy()  # Showers amount\n    hourly_snowfall = hourly.Variables(5).ValuesAsNumpy()  # Snowfall amount\n    hourly_snow_depth = hourly.Variables(6).ValuesAsNumpy()  # Snow depth\n    hourly_weather_code = hourly.Variables(7).ValuesAsNumpy()  # Weather condition code\n    hourly_visibility = hourly.Variables(8).ValuesAsNumpy()  # Visibility\n    hourly_wind_speed_10m = hourly.Variables(9).ValuesAsNumpy()  # Wind speed at 10m\n    hourly_wind_direction_10m = hourly.Variables(10).ValuesAsNumpy()  # Wind direction at 10m\n    \n    # Create a time range for the hourly data using Pandas (supports hourly intervals)\n    start_time = datetime.fromtimestamp(hourly.Time(), tz = timezone.utc)  # Start time of the data\n    end_time = datetime.fromtimestamp(hourly.TimeEnd(), tz = timezone.utc)  # End time of the data\n    interval = pd.Timedelta(seconds=hourly.Interval())  # Time interval between data points\n    \n    # Generate the date range using Pandas\n    date_range = pd.date_range(\n        start = start_time,\n        end = end_time - interval,  # Subtract interval to match the API's inclusive=\"left\" behavior\n        freq = interval\n    )\n    \n    # Create a dictionary to store the hourly weather data\n    hourly_data = {\n        \"date\": date_range,\n        \"temperature_2m\": hourly_temperature_2m,\n        \"precipitation_probability\": hourly_precipitation_probability,\n        \"precipitation\": hourly_precipitation,\n        \"rain\": hourly_rain,\n        \"showers\": hourly_showers,\n        \"snowfall\": hourly_snowfall,\n        \"snow_depth\": hourly_snow_depth,\n        \"weather_code\": hourly_weather_code,\n        \"visibility\": hourly_visibility,\n        \"wind_speed_10m\": hourly_wind_speed_10m,\n        \"wind_direction_10m\": hourly_wind_direction_10m\n    }\n    \n    # Convert the dictionary to a Polars DataFrame and return it\n    return pl.DataFrame(hourly_data)\n```\n:::\n\n\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Write hourly api results.\"}\ndbWriteTable(\nduckdb_con, \n\"hourly_day_forecast\", \ndata.frame(py$import_api_hourly(38.748, -90.439)),\noverwrite = TRUE\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinates 38.74498748779297°N -90.4433364868164°E\nElevation 175.0 m asl\nTimezone b'America/Chicago' b'GMT-6'\nTimezone difference to GMT+0 -21600 s\n```\n\n\n:::\n:::\n\n\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.python .cell-code  code-summary=\"Run the API script to import the dataset.\"}\nimport openmeteo_requests\n\nimport requests_cache\nimport pandas as pd\nfrom retry_requests import retry\n\ndef import_api_hourly_historical(latitude: float, longitude: float) -> pd.DataFrame:\n     \n     # Setup the Open-Meteo API client with cache and retry on error\n     cache_session = requests_cache.CachedSession('.cache', expire_after = -1)\n     retry_session = retry(cache_session, retries = 5, backoff_factor = 0.2)\n     openmeteo = openmeteo_requests.Client(session = retry_session)\n     \n     # Make sure all required weather variables are listed here\n     # The order of variables in hourly or daily is important to assign them correctly below\n     url = \"https://archive-api.open-meteo.com/v1/archive\"\n     params = {\n     \t\"latitude\": 38.748,\n     \t\"longitude\": -90.439,\n     \t\"start_date\": \"1980-01-01\",\n     \t\"end_date\": \"2024-12-31\",\n     \t\"hourly\": [\n     \t     \"temperature_2m\", \n     \t     \"precipitation\", \n     \t     \"rain\", \n     \t     \"snowfall\", \n     \t     \"snow_depth\", \n     \t     \"visibility\",\n     \t     \"weather_code\", \n     \t     \"wind_speed_10m\", \n     \t     \"wind_direction_10m\"],\n     \t\"temperature_unit\": \"fahrenheit\",\n     \t\"wind_speed_unit\": \"mph\",\n     \t\"precipitation_unit\": \"inch\",\n     \t\"timezone\": \"America/Chicago\",\n     \t\"models\": \"best_match\"\n     }\n     responses = openmeteo.weather_api(url, params=params)\n     \n     # Process first location. Add a for-loop for multiple locations or weather models\n     response = responses[0]\n     print(f\"Coordinates {response.Latitude()}°N {response.Longitude()}°E\")\n     print(f\"Elevation {response.Elevation()} m asl\")\n     print(f\"Timezone {response.Timezone()} {response.TimezoneAbbreviation()}\")\n     print(f\"Timezone difference to GMT+0 {response.UtcOffsetSeconds()} s\")\n     \n     # Process hourly data. The order of variables needs to be the same as requested.\n     hourly = response.Hourly()\n     hourly_temperature_2m = hourly.Variables(0).ValuesAsNumpy()\n     hourly_precipitation = hourly.Variables(1).ValuesAsNumpy()\n     hourly_rain = hourly.Variables(2).ValuesAsNumpy()\n     hourly_snowfall = hourly.Variables(3).ValuesAsNumpy()\n     hourly_snow_depth = hourly.Variables(4).ValuesAsNumpy()\n     hourly_visibility = hourly.Variables(5).ValuesAsNumpy()\n     hourly_weather_code = hourly.Variables(6).ValuesAsNumpy()\n     hourly_wind_speed_10m = hourly.Variables(7).ValuesAsNumpy()\n     hourly_wind_direction_10m = hourly.Variables(8).ValuesAsNumpy()\n\n     hourly_data = {\"date\": pd.date_range(\n     \tstart = pd.to_datetime(hourly.Time(), unit = \"s\", utc = True),\n     \tend = pd.to_datetime(hourly.TimeEnd(), unit = \"s\", utc = True),\n     \tfreq = pd.Timedelta(seconds = hourly.Interval()),\n     \tinclusive = \"left\"\n     )}\n     \n     hourly_data[\"temperature_2m\"] = hourly_temperature_2m\n     hourly_data[\"precipitation\"] = hourly_precipitation\n     hourly_data[\"rain\"] = hourly_rain\n     hourly_data[\"snowfall\"] = hourly_snowfall\n     hourly_data[\"snow_depth\"] = hourly_snow_depth\n     hourly_data[\"visibility\"] = hourly_visibility\n     hourly_data[\"weather_code\"] = hourly_weather_code\n     hourly_data[\"wind_speed_10m\"] = hourly_wind_speed_10m\n     hourly_data[\"wind_direction_10m\"] = hourly_wind_direction_10m\n     \n     hourly_dataframe = pd.DataFrame(data = hourly_data)\n     \n     return(hourly_dataframe)\n```\n:::\n\n\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Write hourly api historical data.\"}\ndbWriteTable(\nduckdb_con, \n\"hourly_historical_weather\",\npy$import_api_hourly_historical(38.748, -90.439),\noverwrite = TRUE\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinates 38.769771575927734°N -90.49114990234375°E\nElevation 175.0 m asl\nTimezone b'America/Chicago' b'GMT-6'\nTimezone difference to GMT+0 -21600 s\n```\n\n\n:::\n:::\n\n\n:::\n\n### Realistic Coordinate Examples\n\n-   Intersection of Hwy 70 & 270\n\n    -   38.748, -90.439\n\n-   The St. Louis Regional Freightway\n\n    -   38.627480, -90.189781\n\n-   Port of St. Louis\n\n    -   38.609215, -90.204275\n\n-   USPS Office Kansas City International Airport\n\n    -   KC, MO\n\n        -   39.304413, -94.720711\n\n-   Walmart Distribution Center\n\n    -   1100 Matlock Dr, Saint James, MO 65559-9026\n\n        -   38.002338, -91.634422\n\n-   KCS International Freight Gateway\n\n    -   3301 East 147th Street, Kansas City, MO 64147\n\n        -   38.84930037041913, -94.55499143307868\n\n### Enum\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"load enum file\"}\n#' Create ENUM Type and Associate Codes with Descriptions\n#'\n#' This function creates an ENUM type in DuckDB and associates codes with their descriptions.\n#' It can be used to create other ENUM types and associations\n#'\n#' @param duckdb_conn A DuckDB connection object.\n#' @param enum_name A string specifying the name of the ENUM type to be created.\n#' @param codes A character vector of codes to be included in the ENUM type.\n#' @param descriptions A character vector of descriptions corresponding to the codes.\n#' @example\n#' \\dontrun{\n#' library(DBI)\n#' \n#' codes <- c('0', '1', '2', '3', '45', '48', '51', '53', '55', '56', '57', \n#'            '61', '63', '65', '66', '67', '71', '73', '75', '77', '80', '81', \n#'            '82', '85', '86', '95', '96', '99')\n#' descriptions <- c('Clear sky', 'Mainly clear', 'Partly cloudy', 'Overcast', \n#'                   'Fog', 'Depositing rime fog', 'Drizzle: Light', 'Drizzle: Moderate', \n#'                   'Drizzle: Dense', 'Freezing Drizzle: Light', 'Freezing Drizzle: Dense', \n#'                   'Rain: Slight', 'Rain: Moderate', 'Rain: Heavy', 'Freezing Rain: Light', \n#'                   'Freezing Rain: Heavy', 'Snow fall: Slight', 'Snow fall: Moderate', \n#'                   'Snow fall: Heavy', 'Snow grains', 'Rain showers: Slight', \n#'                   'Rain showers: Moderate', 'Rain showers: Violent', 'Snow showers: Slight', \n#'                   'Snow showers: Heavy', 'Thunderstorm: Slight or moderate', \n#'                   'Thunderstorm with slight hail', 'Thunderstorm with heavy hail')\n#' \n#' result <- create_enum_and_associate(duckdb_con, \"WeatherCode\", codes, descriptions)\n#' print(result)\n#' }\n#' @export\ncreate_enum_and_associate <- function(duckdb_con, enum_name, codes, descriptions) {\n     \n     # Attempt to drop the ENUM type if it exists\n     drop_query <- paste0(\"DROP TYPE IF EXISTS \", enum_name, \";\")\n     \n     tryCatch({\n          dbExecute(duckdb_con, drop_query)\n          message(paste(\"Dropped existing ENUM type:\", enum_name))\n     }, error = \\(e) {\n          message(paste0(\"No existing ENUM type to drop: \", enum_name))\n     })\n     \n     # Create the ENUM type\n     enum_query <- paste0(\"CREATE TYPE \", enum_name, \" AS ENUM (\", \n                          paste0(\"'\", codes, \"'\", collapse = \", \"), \");\")\n     dbExecute(duckdb_con, enum_query)\n     message(paste0(\"Created ENUM type: \", enum_name))\n     \n     # Write an association table for reference\n     dbWriteTable(\n          duckdb_con,\n          \"WeatherCode\",\n          data.frame(\n               Code = codes,\n               Description = descriptions,\n               stringsAsFactors = TRUE\n          ),\n          overwrite = TRUE\n     )\n}\n```\n:::\n\n\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Sets the custom data types in the database.\"}\ncodes <- c(\n'0',\n'1',\n'2',\n'3',\n'45',\n'48',\n'51',\n'53',\n'55',\n'56',\n'57',\n'61',\n'63',\n'65',\n'66',\n'67',\n'71',\n'73',\n'75',\n'77',\n'80',\n'81',\n'82',\n'85',\n'86',\n'95',\n'96',\n'99'\n)\n\ndescriptions <- c(\n'Clear sky',\n'Mainly clear',\n'Partly cloudy',\n'Overcast',\n'Fog',\n'Depositing rime fog',\n'Drizzle: light',\n'Drizzle: moderate',\n'Drizzle: dense',\n'Freezing drizzle: light',\n'Freezing drizzle: dense',\n'Rain: slight',\n'Rain: moderate',\n'Rain: heavy',\n'Freezing rain: light',\n'Freezing rain: heavy',\n'Snow fall: slight',\n'Snow fall: moderate',\n'Snow fall: heavy',\n'Snow grains',\n'Rain showers: slight',\n'Rain showers: moderate',\n'Rain showers: violent',\n'Snow showers: slight',\n'Snow showers: heavy',\n'Thunderstorm: slight or moderate',\n'Thunderstorm with slight hail',\n'Thunderstorm with heavy hail'\n)\n\ncreate_enum_and_associate(duckdb_con, \"WeatherCode\", codes, descriptions)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDropped existing ENUM type: WeatherCode\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCreated ENUM type: WeatherCode\n```\n\n\n:::\n:::\n\n\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"table setup\"}\nrTable <- tbl(duckdb_con, \"WeatherCode\") |> collect()\n\nlocations_list = colnames(rTable)\n\nnotes_list =  list(\n\"World Meteorlogical Organization (WMO) code.\", \n\"Type of meterological event.\")\n\nfootnotes_df <- tibble(\n  notes = notes_list, \n  locations = locations_list)\n\npal_df <- tibble(\n  cols = locations_list,\n  pals = list(eval_palette(\"basetheme::brutal\", 7, 'd', 1))\n)\n\nrTable <- r_table_theming(\nrTable,\ntitle = \"Weather Code: As Data Type\",\nsubtitle = NULL,\nfootnotes_df,\nsource_note = md(\"**source**: World Meteorlogical Organization\"),\npal_df,\nmultiline_feet = TRUE,\ntbl_font_size = pct(85),\ntarget_everything = TRUE,\ncolor_by_columns = \"Code\",\n#doBodyShadows = FALSE\n#row_name_col = \"Model\"\n)\n```\n:::\n\n\n:::\n\n[@noaa_wmo_2025]\n\n:::: skinny-tables\n::: table-flex\n\n\n::: {#tbl-wc .cell tbl-cap='How the WMO codes are\n associated to weather events.'}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"snvgxzodvc\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#snvgxzodvc table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#snvgxzodvc thead, #snvgxzodvc tbody, #snvgxzodvc tfoot, #snvgxzodvc tr, #snvgxzodvc td, #snvgxzodvc th {\n  border-style: none;\n}\n\n#snvgxzodvc p {\n  margin: 0;\n  padding: 0;\n}\n\n#snvgxzodvc .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: 1px;\n  margin-right: 1px;\n  color: #FFFFFF;\n  font-size: 85%;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #222222;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#snvgxzodvc .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#snvgxzodvc .gt_title {\n  color: #FFFFFF;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #222222;\n  border-bottom-width: 0;\n}\n\n#snvgxzodvc .gt_subtitle {\n  color: #FFFFFF;\n  font-size: 110%;\n  font-weight: initial;\n  padding-top: 9px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #222222;\n  border-top-width: 0;\n}\n\n#snvgxzodvc .gt_heading {\n  background-color: #222222;\n  text-align: center;\n  border-bottom-color: #222222;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#snvgxzodvc .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #D3D3D3;\n}\n\n#snvgxzodvc .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n}\n\n#snvgxzodvc .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#snvgxzodvc .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#snvgxzodvc .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#snvgxzodvc .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#snvgxzodvc .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#snvgxzodvc .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#snvgxzodvc .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#snvgxzodvc .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#snvgxzodvc .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#snvgxzodvc .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#snvgxzodvc .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-left-style: none;\n  border-left-width: 0px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#snvgxzodvc .gt_stub {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: bolder;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#snvgxzodvc .gt_stub_row_group {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#snvgxzodvc .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#snvgxzodvc .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#snvgxzodvc .gt_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#snvgxzodvc .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#snvgxzodvc .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#snvgxzodvc .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#snvgxzodvc .gt_grand_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#snvgxzodvc .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#snvgxzodvc .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#snvgxzodvc .gt_striped {\n  background-color: #333333;\n}\n\n#snvgxzodvc .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n}\n\n#snvgxzodvc .gt_footnotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#snvgxzodvc .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#snvgxzodvc .gt_sourcenotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#snvgxzodvc .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#snvgxzodvc .gt_left {\n  text-align: left;\n}\n\n#snvgxzodvc .gt_center {\n  text-align: center;\n}\n\n#snvgxzodvc .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#snvgxzodvc .gt_font_normal {\n  font-weight: normal;\n}\n\n#snvgxzodvc .gt_font_bold {\n  font-weight: bold;\n}\n\n#snvgxzodvc .gt_font_italic {\n  font-style: italic;\n}\n\n#snvgxzodvc .gt_super {\n  font-size: 65%;\n}\n\n#snvgxzodvc .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#snvgxzodvc .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#snvgxzodvc .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#snvgxzodvc .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#snvgxzodvc .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#snvgxzodvc .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#snvgxzodvc .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#snvgxzodvc .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#snvgxzodvc div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"2\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Weather Code: As Data Type</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Code\">Code<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Description\">Description<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #5E81AC; color: #FFFFFF;\">0</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #5E81AC; color: #FFFFFF;\">Clear sky</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #6C89A1; color: #FFFFFF;\">1</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #6C89A1; color: #FFFFFF;\">Mainly clear</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #789297; color: #FFFFFF;\">2</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #789297; color: #FFFFFF;\">Partly cloudy</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #829B8B; color: #FFFFFF;\">3</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #829B8B; color: #FFFFFF;\">Overcast</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #8BA480; color: #FFFFFF;\">45</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #8BA480; color: #FFFFFF;\">Fog</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #96A178; color: #FFFFFF;\">48</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #96A178; color: #FFFFFF;\">Depositing rime fog</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #A39375; color: #FFFFFF;\">51</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #A39375; color: #FFFFFF;\">Drizzle: light</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #AE8371; color: #FFFFFF;\">53</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #AE8371; color: #FFFFFF;\">Drizzle: moderate</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #B7736E; color: #FFFFFF;\">55</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #B7736E; color: #FFFFFF;\">Drizzle: dense</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #BF616A; color: #FFFFFF;\">56</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #BF616A; color: #FFFFFF;\">Freezing drizzle: light</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #CA7B5F; color: #FFFFFF;\">57</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #CA7B5F; color: #FFFFFF;\">Freezing drizzle: dense</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #D39452; color: #FFFFFF;\">61</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #D39452; color: #FFFFFF;\">Rain: slight</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #DCAD40; color: #000000;\">63</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #DCAD40; color: #000000;\">Rain: moderate</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #E4C625; color: #000000;\">65</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #E4C625; color: #000000;\">Rain: heavy</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #DBC312; color: #000000;\">66</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #DBC312; color: #000000;\">Freezing rain: light</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #C3A620; color: #000000;\">67</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #C3A620; color: #000000;\">Freezing rain: heavy</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #AB8926; color: #FFFFFF;\">71</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #AB8926; color: #FFFFFF;\">Snow fall: slight</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #946E29; color: #FFFFFF;\">73</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #946E29; color: #FFFFFF;\">Snow fall: moderate</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #7D5329; color: #FFFFFF;\">75</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #7D5329; color: #FFFFFF;\">Snow fall: heavy</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #96612D; color: #FFFFFF;\">77</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #96612D; color: #FFFFFF;\">Snow grains</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #B07030; color: #FFFFFF;\">80</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #B07030; color: #FFFFFF;\">Rain showers: slight</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #CB7E33; color: #FFFFFF;\">81</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #CB7E33; color: #FFFFFF;\">Rain showers: moderate</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #E68D37; color: #FFFFFF;\">82</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #E68D37; color: #FFFFFF;\">Rain showers: violent</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #EA9D46; color: #000000;\">85</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #EA9D46; color: #000000;\">Snow showers: slight</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #D4AA60; color: #000000;\">86</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #D4AA60; color: #000000;\">Snow showers: heavy</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #BAB779; color: #000000;\">95</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #BAB779; color: #000000;\">Thunderstorm: slight or moderate</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center\" style=\"background-color: #98C292; color: #000000;\">96</td>\n<td headers=\"Description\" class=\"gt_row gt_center\" style=\"background-color: #98C292; color: #000000;\">Thunderstorm with slight hail</td></tr>\n    <tr><td headers=\"Code\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #66CDAA; color: #000000;\">99</td>\n<td headers=\"Description\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #66CDAA; color: #000000;\">Thunderstorm with heavy hail</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"2\"><span data-qmd-base64=\"PHN0cm9uZz5zb3VyY2U8L3N0cm9uZz46IFdvcmxkIE1ldGVvcmxvZ2ljYWwgT3JnYW5pemF0aW9u\"><span class='gt_from_md'><strong>source</strong>: World Meteorlogical Organization</span></span></td>\n    </tr>\n  </tfoot>\n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> World Meteorlogical Organization (WMO) code.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span> Type of meterological event.</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n::::\n\n# Modeling Weather\n\n::: p-1\nThe study, published in the *Weather and Forecasting* journal, focuses on evaluating and improving the accuracy of weather prediction models, particularly for severe weather events. It examines the performance of high-resolution numerical weather prediction (NWP) models in forecasting convective storms, which are critical for predicting severe weather such as thunderstorms, hail, and tornadoes. The research highlights advancements in model resolution, data assimilation techniques, and the integration of observational data to enhance forecast precision. The findings emphasize the importance of these improvements for short-term (nowcasting) and medium-range forecasts, particularly in regions prone to severe weather, like the central United States (including Missouri). @dowell_high-resolution_2022\n:::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"table setup\"}\n# Create the tibble\nforecast_models <- tibble(\n     Model = c(\"GFS\", \"HRRR\"),\n     Developed_By = c(\n          \"NOAA (National Oceanic and Atmospheric Administration)\",\n          \"NOAA (specifically by the Earth System Research Laboratory)\"\n     ),\n     Scope = c(\n          \"Global\",\n          \"Regional (primarily focused on the contiguous United States)\"\n     ),\n     Resolution = c(\n          \"Lower resolution compared to HRRR (approximately 13 km as of recent updates)\",\n          \"High resolution (3 km)\"\n     ),\n     Forecast_Range = c(\"Up to 16 days\", \"Up to 18 hours\"),\n     Updates = c(\"Runs four times a day (00Z, 06Z, 12Z, 18Z)\", \"Runs every hour\"),\n     Applications = c(\n          \"Used for long-term weather forecasting, climate modeling, and global weather patterns.\",\n          \"Ideal for short-term, detailed weather forecasting, including severe weather events like thunderstorms, tornadoes, and localized precipitation.\"\n     )\n)\n\nlocations_list = colnames(forecast_models)\n\nnotes_list =  list(\n     \"\",\n  \"Organization or entity responsible for developing the model.\",\n  \"Geographical coverage of the model (e.g., global or regional).\",\n  \"Spatial resolution of the model, indicating the level of detail in the forecasts.\",\n  \"Time period for which the model provides forecasts.\",\n  \"Frequency at which the model is updated with new data.\",\n  \"Primary uses and strengths of the model in weather forecasting.\"\n  )\n\nfootnotes_df <- tibble(\n  notes = notes_list, \n  locations = locations_list)\n\npal_df <- tibble(\n  cols = locations_list\n#  pals = list(eval_palette(\"viridis::viridis\", 2, 'c', 1))\n)\n\nrTable <- r_table_theming(\nforecast_models,\ntitle = \"Forecast Models: Attributes\",\nsubtitle = NULL,\nfootnotes_df,\nsource_note = md(\"**source**: \"),\npal_df,\nmultiline_feet = TRUE,\ntbl_font_size = pct(85),\ntarget_everything = TRUE,\nrow_name_col = \"Model\",\n#doBodyShadows = TRUE\n)\n```\n:::\n\n\n:::\n\n::::: {#one}\n:::: medium-large-tables\n::: table-flex\n\n\n::: {#tbl-modelAttributes .cell .column-body-outset-right}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"sxifofhhim\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#sxifofhhim table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#sxifofhhim thead, #sxifofhhim tbody, #sxifofhhim tfoot, #sxifofhhim tr, #sxifofhhim td, #sxifofhhim th {\n  border-style: none;\n}\n\n#sxifofhhim p {\n  margin: 0;\n  padding: 0;\n}\n\n#sxifofhhim .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: 1px;\n  margin-right: 1px;\n  color: #FFFFFF;\n  font-size: 85%;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #222222;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#sxifofhhim .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#sxifofhhim .gt_title {\n  color: #FFFFFF;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #222222;\n  border-bottom-width: 0;\n}\n\n#sxifofhhim .gt_subtitle {\n  color: #FFFFFF;\n  font-size: 110%;\n  font-weight: initial;\n  padding-top: 9px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #222222;\n  border-top-width: 0;\n}\n\n#sxifofhhim .gt_heading {\n  background-color: #222222;\n  text-align: center;\n  border-bottom-color: #222222;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#sxifofhhim .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #D3D3D3;\n}\n\n#sxifofhhim .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n}\n\n#sxifofhhim .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#sxifofhhim .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#sxifofhhim .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#sxifofhhim .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#sxifofhhim .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#sxifofhhim .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#sxifofhhim .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#sxifofhhim .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#sxifofhhim .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#sxifofhhim .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#sxifofhhim .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-left-style: none;\n  border-left-width: 0px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#sxifofhhim .gt_stub {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: bolder;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sxifofhhim .gt_stub_row_group {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#sxifofhhim .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#sxifofhhim .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#sxifofhhim .gt_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sxifofhhim .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#sxifofhhim .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#sxifofhhim .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#sxifofhhim .gt_grand_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sxifofhhim .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#sxifofhhim .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#sxifofhhim .gt_striped {\n  background-color: #333333;\n}\n\n#sxifofhhim .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n}\n\n#sxifofhhim .gt_footnotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#sxifofhhim .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sxifofhhim .gt_sourcenotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#sxifofhhim .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#sxifofhhim .gt_left {\n  text-align: left;\n}\n\n#sxifofhhim .gt_center {\n  text-align: center;\n}\n\n#sxifofhhim .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#sxifofhhim .gt_font_normal {\n  font-weight: normal;\n}\n\n#sxifofhhim .gt_font_bold {\n  font-weight: bold;\n}\n\n#sxifofhhim .gt_font_italic {\n  font-style: italic;\n}\n\n#sxifofhhim .gt_super {\n  font-size: 65%;\n}\n\n#sxifofhhim .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#sxifofhhim .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#sxifofhhim .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#sxifofhhim .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#sxifofhhim .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#sxifofhhim .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#sxifofhhim .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#sxifofhhim .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#sxifofhhim div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n\n#one .gt_table_body td.gt_row {\n  box-shadow: -1px -1px 7px 1px rgba(0, 0, 0, 0.2) inset;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"7\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Forecast Models: Attributes</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"a::stub\"></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Developed_By\">Developed_By<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Scope\">Scope<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Resolution\">Resolution<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>3</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Forecast_Range\">Forecast_Range<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>4</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Updates\">Updates<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>5</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Applications\">Applications<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>6</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><th id=\"stub_1_1\" scope=\"row\" class=\"gt_row gt_left gt_stub\">GFS</th>\n<td headers=\"stub_1_1 Developed_By\" class=\"gt_row gt_left\">NOAA (National Oceanic and Atmospheric Administration)</td>\n<td headers=\"stub_1_1 Scope\" class=\"gt_row gt_left\">Global</td>\n<td headers=\"stub_1_1 Resolution\" class=\"gt_row gt_left\">Lower resolution compared to HRRR (approximately 13 km as of recent updates)</td>\n<td headers=\"stub_1_1 Forecast_Range\" class=\"gt_row gt_left\">Up to 16 days</td>\n<td headers=\"stub_1_1 Updates\" class=\"gt_row gt_left\">Runs four times a day (00Z, 06Z, 12Z, 18Z)</td>\n<td headers=\"stub_1_1 Applications\" class=\"gt_row gt_left\">Used for long-term weather forecasting, climate modeling, and global weather patterns.</td></tr>\n    <tr><th id=\"stub_1_2\" scope=\"row\" class=\"gt_row gt_left gt_stub  gt_striped\">HRRR</th>\n<td headers=\"stub_1_2 Developed_By\" class=\"gt_row gt_left gt_striped\">NOAA (specifically by the Earth System Research Laboratory)</td>\n<td headers=\"stub_1_2 Scope\" class=\"gt_row gt_left gt_striped\">Regional (primarily focused on the contiguous United States)</td>\n<td headers=\"stub_1_2 Resolution\" class=\"gt_row gt_left gt_striped\">High resolution (3 km)</td>\n<td headers=\"stub_1_2 Forecast_Range\" class=\"gt_row gt_left gt_striped\">Up to 18 hours</td>\n<td headers=\"stub_1_2 Updates\" class=\"gt_row gt_left gt_striped\">Runs every hour</td>\n<td headers=\"stub_1_2 Applications\" class=\"gt_row gt_left gt_striped\">Ideal for short-term, detailed weather forecasting, including severe weather events like thunderstorms, tornadoes, and localized precipitation.</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"7\"><span data-qmd-base64=\"PHN0cm9uZz5zb3VyY2U8L3N0cm9uZz46\"><span class='gt_from_md'><strong>source</strong>:</span></span></td>\n    </tr>\n  </tfoot>\n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> Organization or entity responsible for developing the model.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span> Geographical coverage of the model (e.g., global or regional).</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>3</sup></span> Spatial resolution of the model, indicating the level of detail in the forecasts.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>4</sup></span> Time period for which the model provides forecasts.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>5</sup></span> Frequency at which the model is updated with new data.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"7\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>6</sup></span> Primary uses and strengths of the model in weather forecasting.</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n::::\n:::::\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"table setup\"}\nforecast_model_differences <- tibble(\n\"Resolution\" = c(\n\"HRRR has a much higher resolution than GFS, making it more accurate for short-term, localized forecasts.\"\n),\n\"Forecast_Range\" = c(\"GFS provides forecasts for a much longer period compared to HRRR.\"),\n\"Update_Frequency\" =  c(\n\"HRRR updates more frequently, which is crucial for capturing rapidly changing weather conditions.\"\n)\n)\n\nlocations_list = colnames(forecast_model_differences)\n\nnotes_list =  list(\n  \"Spatial resolution of the model, indicating the level of detail in the forecasts.\",\n  \"Time period for which the model provides forecasts.\",\n  \"Frequency at which the model is updated with new data.\")\n\nfootnotes_df <- tibble(\n  notes = notes_list, \n  locations = locations_list)\n\npal_df <- tibble(\n  cols = locations_list\n#  pals = list(eval_palette(\"viridis::viridis\", 2, 'c', 1))\n)\n\nrTable <- r_table_theming(\nforecast_model_differences,\ntitle = \"Forecast Models: Differences\",\nsubtitle = NULL,\nfootnotes_df,\nsource_note = md(\"**source**: \"),\npal_df,\nmultiline_feet = TRUE,\ntbl_font_size = pct(85),\ntarget_everything = TRUE,\nrow_name_col = NULL,\ndoBodyShadows = TRUE\n)\n```\n:::\n\n\n:::\n\n::: table-flex\n\n\n::: {#tbl-modelDiffs .cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"vnqjtlvsgi\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#vnqjtlvsgi table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#vnqjtlvsgi thead, #vnqjtlvsgi tbody, #vnqjtlvsgi tfoot, #vnqjtlvsgi tr, #vnqjtlvsgi td, #vnqjtlvsgi th {\n  border-style: none;\n}\n\n#vnqjtlvsgi p {\n  margin: 0;\n  padding: 0;\n}\n\n#vnqjtlvsgi .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: 1px;\n  margin-right: 1px;\n  color: #FFFFFF;\n  font-size: 85%;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #222222;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#vnqjtlvsgi .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#vnqjtlvsgi .gt_title {\n  color: #FFFFFF;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #222222;\n  border-bottom-width: 0;\n}\n\n#vnqjtlvsgi .gt_subtitle {\n  color: #FFFFFF;\n  font-size: 110%;\n  font-weight: initial;\n  padding-top: 9px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #222222;\n  border-top-width: 0;\n}\n\n#vnqjtlvsgi .gt_heading {\n  background-color: #222222;\n  text-align: center;\n  border-bottom-color: #222222;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vnqjtlvsgi .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vnqjtlvsgi .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n}\n\n#vnqjtlvsgi .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#vnqjtlvsgi .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#vnqjtlvsgi .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#vnqjtlvsgi .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#vnqjtlvsgi .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#vnqjtlvsgi .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#vnqjtlvsgi .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#vnqjtlvsgi .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vnqjtlvsgi .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#vnqjtlvsgi .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#vnqjtlvsgi .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-left-style: none;\n  border-left-width: 0px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#vnqjtlvsgi .gt_stub {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: bolder;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vnqjtlvsgi .gt_stub_row_group {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#vnqjtlvsgi .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#vnqjtlvsgi .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#vnqjtlvsgi .gt_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vnqjtlvsgi .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#vnqjtlvsgi .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#vnqjtlvsgi .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vnqjtlvsgi .gt_grand_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vnqjtlvsgi .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#vnqjtlvsgi .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vnqjtlvsgi .gt_striped {\n  background-color: #333333;\n}\n\n#vnqjtlvsgi .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n}\n\n#vnqjtlvsgi .gt_footnotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vnqjtlvsgi .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vnqjtlvsgi .gt_sourcenotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vnqjtlvsgi .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vnqjtlvsgi .gt_left {\n  text-align: left;\n}\n\n#vnqjtlvsgi .gt_center {\n  text-align: center;\n}\n\n#vnqjtlvsgi .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#vnqjtlvsgi .gt_font_normal {\n  font-weight: normal;\n}\n\n#vnqjtlvsgi .gt_font_bold {\n  font-weight: bold;\n}\n\n#vnqjtlvsgi .gt_font_italic {\n  font-style: italic;\n}\n\n#vnqjtlvsgi .gt_super {\n  font-size: 65%;\n}\n\n#vnqjtlvsgi .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#vnqjtlvsgi .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#vnqjtlvsgi .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#vnqjtlvsgi .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#vnqjtlvsgi .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#vnqjtlvsgi .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#vnqjtlvsgi .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#vnqjtlvsgi .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#vnqjtlvsgi div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"3\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Forecast Models: Differences</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Resolution\">Resolution<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Forecast_Range\">Forecast_Range<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Update_Frequency\">Update_Frequency<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>3</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Resolution\" class=\"gt_row gt_left\">HRRR has a much higher resolution than GFS, making it more accurate for short-term, localized forecasts.</td>\n<td headers=\"Forecast_Range\" class=\"gt_row gt_left\">GFS provides forecasts for a much longer period compared to HRRR.</td>\n<td headers=\"Update_Frequency\" class=\"gt_row gt_left\">HRRR updates more frequently, which is crucial for capturing rapidly changing weather conditions.</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"3\"><span data-qmd-base64=\"PHN0cm9uZz5zb3VyY2U8L3N0cm9uZz46\"><span class='gt_from_md'><strong>source</strong>:</span></span></td>\n    </tr>\n  </tfoot>\n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> Spatial resolution of the model, indicating the level of detail in the forecasts.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span> Time period for which the model provides forecasts.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"3\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>3</sup></span> Frequency at which the model is updated with new data.</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n\n## Weather Condition Analysis\n\n### FROM to Table\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"table setup\"}\nr_df <- tbl(\nduckdb_con, \"hourly_historical_weather\") |>\ndplyr::select(!'visibility') |>\ndplyr::slice_sample(n = 20) |>\ndplyr::collect() |>\ndplyr::mutate(\ndate = as.character.POSIXt(date),\ndate = forcats::as_factor(date)\n)\n\nlocations_list = colnames(r_df)\n\nnotes_list <- c(\n  \"Date and time in POSIXt.\",\n  \"Temperature at 2 meters above the ground in Fahrenheit.\",\n  \"Total precipitation in inches.\",\n  \"Rain precipitation in inches.\",\n  \"Snowfall in inches.\",\n  \"Snow depth in inches.\",\n  #\"Visibility in miles.\",\n  \"Weather code indicating the current weather condition.\",\n  \"Wind speed at 10 meters above the ground in miles per hour.\",\n  \"Wind direction at 10 meters above the ground in degrees.\"\n)\n\nfootnotes_df <- tibble(\n  notes = notes_list, \n  locations = locations_list\n)\n\npal_df <- tibble(\n  cols = locations_list,\n  pals = list(eval_palette(\"grDevices::Greens 3\", , 'c', -1))\n)\n\nrTable <- r_table_theming(\nr_df,\ntitle = \"Historical View\",\nsubtitle = NULL,\nfootnotes_df,\nsource_note = md(\"**source**: \"),\npal_df,\nmultiline_feet = TRUE,\ntbl_font_size = pct(80),\ndoBodyShadows = TRUE\n)\n```\n:::\n\n\n:::\n\n::: table-flex\n\n\n::: {#tbl-historicalSample .cell .column-screen-inset-right}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"kewuvkatqm\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#kewuvkatqm table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#kewuvkatqm thead, #kewuvkatqm tbody, #kewuvkatqm tfoot, #kewuvkatqm tr, #kewuvkatqm td, #kewuvkatqm th {\n  border-style: none;\n}\n\n#kewuvkatqm p {\n  margin: 0;\n  padding: 0;\n}\n\n#kewuvkatqm .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: 1px;\n  margin-right: 1px;\n  color: #FFFFFF;\n  font-size: 80%;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #222222;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#kewuvkatqm .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#kewuvkatqm .gt_title {\n  color: #FFFFFF;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #222222;\n  border-bottom-width: 0;\n}\n\n#kewuvkatqm .gt_subtitle {\n  color: #FFFFFF;\n  font-size: 110%;\n  font-weight: initial;\n  padding-top: 9px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #222222;\n  border-top-width: 0;\n}\n\n#kewuvkatqm .gt_heading {\n  background-color: #222222;\n  text-align: center;\n  border-bottom-color: #222222;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#kewuvkatqm .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kewuvkatqm .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n}\n\n#kewuvkatqm .gt_col_heading {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #000000;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 11px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#kewuvkatqm .gt_column_spanner_outer {\n  color: #FFFFFF;\n  background-color: #333333;\n  font-size: 100%;\n  font-weight: bold;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#kewuvkatqm .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#kewuvkatqm .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#kewuvkatqm .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n  vertical-align: bottom;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#kewuvkatqm .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#kewuvkatqm .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#kewuvkatqm .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#kewuvkatqm .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#kewuvkatqm .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#kewuvkatqm .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-left-style: none;\n  border-left-width: 0px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#kewuvkatqm .gt_stub {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: bolder;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 0px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kewuvkatqm .gt_stub_row_group {\n  color: #FFFFFF;\n  background-color: #222222;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#kewuvkatqm .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#kewuvkatqm .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#kewuvkatqm .gt_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kewuvkatqm .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#kewuvkatqm .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#kewuvkatqm .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kewuvkatqm .gt_grand_summary_row {\n  color: #FFFFFF;\n  background-color: #222222;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kewuvkatqm .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#kewuvkatqm .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#kewuvkatqm .gt_striped {\n  background-color: #333333;\n}\n\n#kewuvkatqm .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 0px;\n  border-top-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 0px;\n  border-bottom-color: #000000;\n}\n\n#kewuvkatqm .gt_footnotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#kewuvkatqm .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kewuvkatqm .gt_sourcenotes {\n  color: #FFFFFF;\n  background-color: #222222;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#kewuvkatqm .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#kewuvkatqm .gt_left {\n  text-align: left;\n}\n\n#kewuvkatqm .gt_center {\n  text-align: center;\n}\n\n#kewuvkatqm .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#kewuvkatqm .gt_font_normal {\n  font-weight: normal;\n}\n\n#kewuvkatqm .gt_font_bold {\n  font-weight: bold;\n}\n\n#kewuvkatqm .gt_font_italic {\n  font-style: italic;\n}\n\n#kewuvkatqm .gt_super {\n  font-size: 65%;\n}\n\n#kewuvkatqm .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#kewuvkatqm .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#kewuvkatqm .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#kewuvkatqm .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#kewuvkatqm .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#kewuvkatqm .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#kewuvkatqm .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#kewuvkatqm .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#kewuvkatqm div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"9\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style>Historical View</td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"date\">date<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"temperature_2m\">temperature_2m<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"precipitation\">precipitation<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>3</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"rain\">rain<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>4</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"snowfall\">snowfall<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>5</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"snow_depth\">snow_depth<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>6</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"weather_code\">weather_code<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>7</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"wind_speed_10m\">wind_speed_10m<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>8</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"wind_direction_10m\">wind_direction_10m<span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>9</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #F9F9F9; color: #000000;\">1988-08-02 01:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #004616; color: #FFFFFF;\">89.75660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #E0F4E4; color: #000000;\">5.110945</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #A3D9AF; color: #000000;\">156.80139</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #F0F8F1; color: #000000;\">1998-09-29 12:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #1A9245; color: #FFFFFF;\">68.33660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #004616; color: #FFFFFF;\">0.007874016</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #004616; color: #FFFFFF;\">0.007874016</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #1B9346; color: #FFFFFF;\">51</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #E7F6EA; color: #000000;\">4.718956</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #86CB95; color: #000000;\">185.44025</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #E7F6EA; color: #000000;\">1990-06-12 02:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #14813C; color: #FFFFFF;\">73.28660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #CBECD1; color: #000000;\">6.187236</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #99D4A5; color: #000000;\">167.47121</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #DBF2DF; color: #000000;\">1980-07-30</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #01501C; color: #FFFFFF;\">87.05659</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #DBF2DF; color: #000000;\">5.368800</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #004616; color: #FFFFFF;\">360.00000</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #CEEDD4; color: #000000;\">2017-03-11 18:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #BDE5C5; color: #000000;\">33.56600</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0.003937008</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #004616; color: #FFFFFF;\">0.02755906</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #74C286; color: #000000;\">0.03280840</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #004616; color: #FFFFFF;\">71</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #EDF7EF; color: #000000;\">4.273782</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #F7F9F7; color: #000000;\">47.12111</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #C0E6C7; color: #000000;\">1981-01-23 16:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #AFDEB8; color: #000000;\">37.55660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0.03280840</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F2F8F3; color: #000000;\">3</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F6F9F6; color: #000000;\">3.641572</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #066B2F; color: #FFFFFF;\">317.48959</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #B1DFBA; color: #000000;\">1997-08-16 08:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #03652B; color: #FFFFFF;\">81.29660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #41AB5F; color: #FFFFFF;\">11.126686</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #69BC7D; color: #000000;\">210.17343</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #A1D8AC; color: #000000;\">1986-11-09 17:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #92D1A0; color: #000000;\">44.48660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #83CA93; color: #000000;\">9.127947</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #03662B; color: #FFFFFF;\">323.97253</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #90D09D; color: #000000;\">1983-04-12 17:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #41AB60; color: #FFFFFF;\">60.14660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #004616; color: #FFFFFF;\">0.007874016</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #004616; color: #FFFFFF;\">0.007874016</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #1B9346; color: #FFFFFF;\">51</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #04672C; color: #FFFFFF;\">14.416072</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #B5E1BE; color: #000000;\">138.14505</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #7DC68E; color: #000000;\">2011-07-18 11:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #0D7534; color: #FFFFFF;\">76.61660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F7F9F7; color: #000000;\">1</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #CCECD1; color: #000000;\">6.171040</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #57B470; color: #FFFFFF;\">223.53127</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #69BD7E; color: #000000;\">2023-04-06</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #73C186; color: #000000;\">51.20600</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F2F8F3; color: #000000;\">3</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #C2E8CA; color: #000000;\">6.579215</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #0D7535; color: #FFFFFF;\">305.31128</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #53B26D; color: #FFFFFF;\">2023-11-09</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #14813C; color: #FFFFFF;\">73.16600</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F7F9F7; color: #000000;\">1</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #BDE5C4; color: #000000;\">6.843904</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #188A41; color: #FFFFFF;\">281.30991</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #39A85A; color: #FFFFFF;\">2023-11-14 21:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #33A657; color: #FFFFFF;\">62.00600</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #9FD7AA; color: #000000;\">8.108932</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #A5DAB0; color: #000000;\">155.55606</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #1E9C4B; color: #FFFFFF;\">1980-10-24 21:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #84CA93; color: #000000;\">47.81660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F2F8F3; color: #000000;\">3</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #0F7937; color: #FFFFFF;\">13.608978</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #127E3A; color: #FFFFFF;\">295.30136</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #198E43; color: #FFFFFF;\">2008-04-20 10:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #8ECF9C; color: #000000;\">45.56660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">3.421952</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #188A41; color: #FFFFFF;\">281.30991</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #13803B; color: #FFFFFF;\">1991-01-21 11:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">12.62660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0.03280840</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F2F8F3; color: #000000;\">3</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #1D9949; color: #FFFFFF;\">12.125282</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #0C7334; color: #FFFFFF;\">307.50421</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #0A7132; color: #FFFFFF;\">1995-05-21 04:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #22A24F; color: #FFFFFF;\">63.83660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F2F8F3; color: #000000;\">3</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #DEF3E2; color: #000000;\">5.222329</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #1E9C4B; color: #FFFFFF;\">260.13425</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #03632A; color: #FFFFFF;\">2017-03-14 18:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #CAEBD0; color: #000000;\">30.05600</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #74C286; color: #000000;\">0.003937008</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #004616; color: #FFFFFF;\">0.02755906</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #004616; color: #FFFFFF;\">0.06561679</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #004616; color: #FFFFFF;\">71</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #50B16A; color: #FFFFFF;\">10.746917</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #004817; color: #FFFFFF;\">357.61411</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center\" style=\"background-color: #015420; color: #FFFFFF;\">2005-05-30 14:00:00</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right\" style=\"background-color: #188B42; color: #FFFFFF;\">70.22660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right\" style=\"background-color: #F7F9F7; color: #000000;\">1</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right\" style=\"background-color: #F6F9F6; color: #000000;\">3.641572</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right\" style=\"background-color: #F9F9F9; color: #000000;\">42.51040</td></tr>\n    <tr><td headers=\"date\" class=\"gt_row gt_center gt_striped\" style=\"background-color: #004616; color: #FFFFFF;\">2016-12-30</td>\n<td headers=\"temperature_2m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #A2D8AD; color: #000000;\">40.70660</td>\n<td headers=\"precipitation\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"rain\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.000000000</td>\n<td headers=\"snowfall\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"snow_depth\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0.00000000</td>\n<td headers=\"weather_code\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #F9F9F9; color: #000000;\">0</td>\n<td headers=\"wind_speed_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #004616; color: #FFFFFF;\">15.907887</td>\n<td headers=\"wind_direction_10m\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #127D3A; color: #FFFFFF;\">295.84433</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"9\"><span data-qmd-base64=\"PHN0cm9uZz5zb3VyY2U8L3N0cm9uZz46\"><span class='gt_from_md'><strong>source</strong>:</span></span></td>\n    </tr>\n  </tfoot>\n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>1</sup></span> Date and time in POSIXt.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>2</sup></span> Temperature at 2 meters above the ground in Fahrenheit.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>3</sup></span> Total precipitation in inches.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>4</sup></span> Rain precipitation in inches.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>5</sup></span> Snowfall in inches.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>6</sup></span> Snow depth in inches.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>7</sup></span> Weather code indicating the current weather condition.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>8</sup></span> Wind speed at 10 meters above the ground in miles per hour.</td>\n    </tr>\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"9\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height:0;\"><sup>9</sup></span> Wind direction at 10 meters above the ground in degrees.</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n\n### GGplot Testing\n\n::: {#fig-weather layout-ncol=\"3\" fig-cap=\"These are the grouped figures.\"}\n\n\n::: {.cell lightbox='{\"group\":\"weather\",\"description\":\"Simple weather codes for simple insights.\"}'}\n::: {.cell-output-display}\n![Weather Codes](index_files/figure-html/fig-weather_codes-1.png){#fig-weather_codes width=672}\n:::\n:::\n\n::: {.cell lightbox='{\"group\":\"weather\",\"description\":\"Temperature with freezing point indicators.\"}'}\n::: {.cell-output-display}\n![Freezing/Non-Freezing Temperature](index_files/figure-html/fig-temperature_freezing-1.png){#fig-temperature_freezing width=672}\n:::\n:::\n\n::: {.cell lightbox='{\"group\":\"weather\",\"description\":\"Visibility in kilometers.\"}'}\n::: {.cell-output-display}\n![Visibility (km)](index_files/figure-html/fig-visibility_km-1.png){#fig-visibility_km width=672}\n:::\n:::\n\n::: {.cell lightbox='{\"group\":{},\"description\":\"Simple visiblity categories.\"}'}\n::: {.cell-output-display}\n![Visibility Categories](index_files/figure-html/fig-visibility_categories-1.png){#fig-visibility_categories width=672}\n:::\n:::\n\n::: {.cell lightbox='{\"group\":\"weather\",\"description\":\"Indicator for rain and or snowfall.\"}'}\n::: {.cell-output-display}\n![Precipitation (empty if no precipitation)](index_files/figure-html/fig-precipitation-1.png){#fig-precipitation width=672}\n:::\n:::\n\n::: {.cell lightbox='{\"group\":\"weather\",\"description\":\"Wind direction and speed.\"}'}\n::: {.cell-output-display}\n![Wind Rose](index_files/figure-html/fig-wind_rose-1.png){#fig-wind_rose width=672}\n:::\n:::\n\n\n:::\n\n@fig-weather\n\n@fig-weather_codes\n\n@fig-temperature_freezing\n\n@fig-visibility_km\n\n@fig-visibility_categories\n\n@fig-precipitation\n\n@fig-wind_rose\n\n# Disconnect From Databases\n\n::: code-fold-flex\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Dereference memory from the in-memory database connections.\"}\ndbDisconnect(duckdb_con)\n```\n:::\n\n\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}