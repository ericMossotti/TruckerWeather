
@misc{noauthor_apiweathergov_nodate,
	title = {api.weather.gov: {General} {FAQs}},
	url = {https://weather-gov.github.io/api/general-faqs},
	urldate = {2025-02-08},
}

@misc{noauthor_google_nodate,
	title = {Google {Maps} {Platform} {APIs} by {Platform} ¬†{\textbar}¬† {Google} for {Developers}},
	url = {https://developers.google.com/maps/apis-by-platform},
	urldate = {2025-02-08},
}

@misc{noauthor_historical_nodate,
	title = {Historical {Observing} {Metadata} {Repository} ({HOMR}) {\textbar} {National} {Centers} for {Environmental} {Information}},
	url = {https://www.ncei.noaa.gov/access/homr/#ncdcstnid=20011882&tab=PHR},
	urldate = {2025-02-08},
}

@misc{openMeteo_2025,
	title = {üå§Ô∏è {Free} {Open}-{Source} {Weather} {API} {\textbar} {Open}-{Meteo}.com},
	url = {https://open-meteo.com/},
	urldate = {2025-02-08},
}

@misc{noauthor_weatherdata_nodate,
	title = {{weatherData} package - {RDocumentation}},
	url = {https://www.rdocumentation.org/packages/weatherData/versions/0.5.0},
	urldate = {2025-02-08},
}

@article{may_metpy_2022,
	title = {{MetPy}: {A} {Meteorological} {Python} {Library} for {Data} {Analysis} and {Visualization}},
	shorttitle = {{MetPy}},
	url = {https://journals.ametsoc.org/view/journals/bams/103/10/BAMS-D-21-0125.1.xml},
	doi = {10.1175/BAMS-D-21-0125.1},
	abstract = {MetPy is an open-source, Python-based package for meteorology, providing domain-specific functionality built extensively on top of the robust scientific Python software stack, which includes libraries like NumPy, SciPy, Matplotlib, and xarray. The goal of the project is to bring the weather analysis capabilities of GEMPAK (and similar software tools) into a modern computing paradigm. MetPy strives to employ best practices in its development, including software tests, continuous integration, and automated publishing of web-based documentation. As such, MetPy represents a sustainable, long-term project that fills a need for the meteorological community. MetPy‚Äôs development is substantially driven by its user community, both through feedback on a variety of open, public forums like Stack Overflow, and through code contributions facilitated by the GitHub collaborative software development platform. MetPy has recently seen the release of version 1.0, with robust functionality for analyzing and visualizing meteorological datasets. While previous versions of MetPy have already seen extensive use, the 1.0 release represents a significant milestone in terms of completeness and a commitment to long-term support for the programming interfaces. This article provides an overview of MetPy‚Äôs suite of capabilities, including its use of labeled arrays and physical unit information as its core data model, unit-aware calculations, cross sections, skew T and GEMPAK-like plotting, station model plots, and support for parsing a variety of meteorological data formats. The general road map for future planned development for MetPy is also discussed.},
	language = {en},
	urldate = {2025-02-08},
	author = {May, Ryan M. and Goebbert, Kevin H. and Thielen, Jonathan E. and Leeman, John R. and Camron, M. Drew and Bruick, Zachary and Bruning, Eric C. and Manser, Russell P. and Arms, Sean C. and Marsh, Patrick T.},
	month = oct,
	year = {2022},
	note = {Section: Bulletin of the American Meteorological Society},
	keywords = {Algorithms, Atmosphere, Data processing/distribution, Software},
}

@misc{noauthor_google_nodate-1,
	title = {Google {Maps} {Platform} {APIs} by {Platform} ¬†{\textbar}¬† {Google} for {Developers}},
	url = {https://developers.google.com/maps/apis-by-platform},
	urldate = {2025-02-08},
}

@misc{noauthor_metpy_nodate,
	title = {{MetPy} ‚Äî {MetPy} 1.6},
	url = {https://unidata.github.io/MetPy/latest/},
	urldate = {2025-02-08},
}
