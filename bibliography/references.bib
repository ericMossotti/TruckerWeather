
@misc{noauthor_apiweathergov_nodate,
	title = {api.weather.gov: {General} {FAQs}},
	url = {https://weather-gov.github.io/api/general-faqs},
	urldate = {2025-02-08},
}

@misc{noauthor_google_nodate,
	title = {Google {Maps} {Platform} {APIs} by {Platform} ¬†{\textbar}¬† {Google} for {Developers}},
	url = {https://developers.google.com/maps/apis-by-platform},
	urldate = {2025-02-08},
}

@misc{noauthor_historical_nodate,
	title = {Historical {Observing} {Metadata} {Repository} ({HOMR}) {\textbar} {National} {Centers} for {Environmental} {Information}},
	url = {https://www.ncei.noaa.gov/access/homr/#ncdcstnid=20011882&tab=PHR},
	urldate = {2025-02-08},
}

@misc{openMeteo_2025,
	title = {üå§Ô∏è {Free} {Open}-{Source} {Weather} {API} {\textbar} {Open}-{Meteo}.com},
	url = {https://open-meteo.com/},
	urldate = {2025-02-08},
}

@misc{noauthor_weatherdata_nodate,
	title = {{weatherData} package - {RDocumentation}},
	url = {https://www.rdocumentation.org/packages/weatherData/versions/0.5.0},
	urldate = {2025-02-08},
}

@article{may_metpy_2022,
	title = {{MetPy}: {A} {Meteorological} {Python} {Library} for {Data} {Analysis} and {Visualization}},
	shorttitle = {{MetPy}},
	url = {https://journals.ametsoc.org/view/journals/bams/103/10/BAMS-D-21-0125.1.xml},
	doi = {10.1175/BAMS-D-21-0125.1},
	abstract = {MetPy is an open-source, Python-based package for meteorology, providing domain-specific functionality built extensively on top of the robust scientific Python software stack, which includes libraries like NumPy, SciPy, Matplotlib, and xarray. The goal of the project is to bring the weather analysis capabilities of GEMPAK (and similar software tools) into a modern computing paradigm. MetPy strives to employ best practices in its development, including software tests, continuous integration, and automated publishing of web-based documentation. As such, MetPy represents a sustainable, long-term project that fills a need for the meteorological community. MetPy‚Äôs development is substantially driven by its user community, both through feedback on a variety of open, public forums like Stack Overflow, and through code contributions facilitated by the GitHub collaborative software development platform. MetPy has recently seen the release of version 1.0, with robust functionality for analyzing and visualizing meteorological datasets. While previous versions of MetPy have already seen extensive use, the 1.0 release represents a significant milestone in terms of completeness and a commitment to long-term support for the programming interfaces. This article provides an overview of MetPy‚Äôs suite of capabilities, including its use of labeled arrays and physical unit information as its core data model, unit-aware calculations, cross sections, skew T and GEMPAK-like plotting, station model plots, and support for parsing a variety of meteorological data formats. The general road map for future planned development for MetPy is also discussed.},
	language = {en},
	urldate = {2025-02-08},
	author = {May, Ryan M. and Goebbert, Kevin H. and Thielen, Jonathan E. and Leeman, John R. and Camron, M. Drew and Bruick, Zachary and Bruning, Eric C. and Manser, Russell P. and Arms, Sean C. and Marsh, Patrick T.},
	month = oct,
	year = {2022},
	note = {Section: Bulletin of the American Meteorological Society},
	keywords = {Algorithms, Atmosphere, Data processing/distribution, Software},
}

@misc{noauthor_google_nodate-1,
	title = {Google {Maps} {Platform} {APIs} by {Platform} ¬†{\textbar}¬† {Google} for {Developers}},
	url = {https://developers.google.com/maps/apis-by-platform},
	urldate = {2025-02-08},
}

@misc{noauthor_metpy_nodate,
	title = {{MetPy} ‚Äî {MetPy} 1.6},
	url = {https://unidata.github.io/MetPy/latest/},
	urldate = {2025-02-08},
}

@misc{noauthor_metpy_nodate-1,
	title = {{MetPy} {Community} {Calendar}},
	url = {https://calendar.google.com/calendar/u/0/embed?height=600&wkst=1&bgcolor=%23ffffff&ctz=America/Denver&title=MetPy+Community+Calendar&showPrint=0&showTabs=0&showCalendars=0&showTz=1&src=Y181OTZjYzM0Y2Q3MTk2Y2FlYzIyMzc4Njc5NWM4NzMwNzg2YWVhZDZlMmRiZmZlMDM0MDMxODZmMjAzMDc1OTczQGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20&color=%23D50000&pli=1},
	language = {en},
	urldate = {2025-02-08},
}

@misc{david-engel_install_2025,
	title = {Install the {Microsoft} {ODBC} driver for {SQL} {Server} ({Linux}) - {ODBC} {Driver} for {SQL} {Server}},
	url = {https://learn.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-ver16},
	abstract = {Learn how to install the Microsoft ODBC Driver for SQL Server on Linux clients to enable database connectivity.},
	language = {en-us},
	urldate = {2025-02-08},
	author = {David-Engel},
	month = jan,
	year = {2025},
}

@misc{noauthor_connecting_nodate,
	title = {Connecting to a database ‚Äî {Python} documentation},
	url = {https://jupysql.ploomber.io/en/latest/connecting.html},
	abstract = {Connect to a SQL database from a Jupyter notebook},
	language = {en},
	urldate = {2025-02-08},
}

@misc{noauthor_ploomberjupysql_nodate,
	title = {ploomber/jupysql: {Better} {SQL} in {Jupyter}. üìä},
	shorttitle = {ploomber/jupysql},
	url = {https://github.com/ploomber/jupysql},
	abstract = {Better SQL in Jupyter. üìä. Contribute to ploomber/jupysql development by creating an account on GitHub.},
	language = {en},
	urldate = {2025-02-08},
	journal = {GitHub},
}

@misc{noauthor_climate_2022,
	type = {Text},
	title = {Climate reanalysis},
	url = {https://www.ecmwf.int/en/research/climate-reanalysis},
	abstract = {ECMWF¬†periodically¬†uses its forecast models and data assimilation systems to 'reanalyse' archived observations, creating global data sets describing the recent history of the atmosphere, land surface, and oceans. The essence of this process, which provides consistent and convenient 'maps without gaps', is explained in this animation. Reanalysis is very popular and is used for monitoring climate change, for research and education, and for commercial applications.},
	language = {en},
	urldate = {2025-02-12},
	journal = {ECMWF},
	month = may,
	year = {2022},
}

@misc{noauthor_highway_nodate,
	title = {Highway {Weather} {App} {\textbar} {Road} {Trip} {Travel} {Weather}},
	url = {https://weatherroute.io/},
	abstract = {Travel weather forecasts for the entire road trip along your route. Arrive safely to your destination every time.},
	language = {en},
	urldate = {2025-02-12},
	journal = {Weather Route},
}

@misc{noauthor_highway_nodate-1,
	title = {Highway {Weather} {App} {\textbar} {Road} {Trip} {Travel} {Weather}},
	url = {https://weatherroute.io/},
	abstract = {Travel weather forecasts for the entire road trip along your route. Arrive safely to your destination every time.},
	language = {en},
	urldate = {2025-02-12},
	journal = {Weather Route},
}

@misc{noauthor_route_nodate,
	title = {Route weather},
	url = {https://morecast.com/en/plan-your-route},
	abstract = {Track the weather and extreme weather situations along your route to make every trip a safe journey, whether it‚Äôs sunny, rainy, or snowing.},
	language = {en},
	urldate = {2025-02-12},
	journal = {Morecast},
}

@misc{noauthor_missouri_nodate,
	title = {Missouri - {Intermodal} {Connectors} - {National} {Highway} {System} - {Planning} - {FHWA}},
	url = {https://www.fhwa.dot.gov/planning/national_highway_system/intermodal_connectors/missouri.cfm},
	urldate = {2025-02-12},
}

@misc{noauthor_intermodal_nodate,
	title = {Intermodal {System} {Maps} \& {Directories}},
	url = {https://www.intermodal.org/intermodalsystem},
	urldate = {2025-02-12},
}

@misc{stachura_big-scale_2024,
	title = {Big-{Scale} {Data} {Dashboards} {With} {Observable} {Framework}},
	url = {https://r-craft.org/big-scale-data-dashboards-with-observable-framework/},
	abstract = {If your organization is looking to build dynamic and interactive dashboards with a strong emphasis on performance or large scale, the Observable Framework could be an ideal fit. This article introduces the framework, its core features, and real-world use cases to illustrate how it can help your data science team drive impactful results. Make your [‚Ä¶] The post appeared first on appsilon.com/blog/.},
	language = {en-US},
	urldate = {2025-02-14},
	journal = {R-Craft},
	author = {Stachura, Filip},
	month = nov,
	year = {2024},
}

@misc{timsevereweatherqueensland_visibility_2024,
	title = {Visibility: {Clarity} of the atmosphere.},
	shorttitle = {Visibility},
	url = {https://timsweather.au/atmospheric-visibility/},
	abstract = {Explore the factors influencing Atmospheric Visibility in Australia, from air quality to weather patterns. Learn how clarity shapes our environment.},
	language = {en-AU},
	urldate = {2025-02-15},
	author = {timsevereweatherqueensland},
	month = aug,
	year = {2024},
	note = {Section: Meteorology},
}

@misc{noauthor_formatting_nodate,
	title = {Formatting: date-time ‚Äî posixt-formatting},
	shorttitle = {Formatting},
	url = {https://clock.r-lib.org/reference/posixt-formatting.html},
	abstract = {This is a POSIXct method for the date\_format() generic.
date\_format() formats a date-time (POSIXct) using a format string.
If format is NULL, a default format of "\%Y-\%m-\%dT\%H:\%M:\%S\%Ez[\%Z]" is
used. This matches the default format that date\_time\_parse\_complete()
parses. Additionally, this format matches the de-facto standard extension to
RFC 3339 for creating completely unambiguous date-times.},
	language = {en},
	urldate = {2025-02-15},
}

@misc{timsevereweatherqueensland_visibility_2024-1,
	title = {Visibility: {Clarity} of the atmosphere.},
	shorttitle = {Visibility},
	url = {https://timsweather.au/atmospheric-visibility/},
	abstract = {Explore the factors influencing Atmospheric Visibility in Australia, from air quality to weather patterns. Learn how clarity shapes our environment.},
	language = {en-AU},
	urldate = {2025-02-15},
	author = {timsevereweatherqueensland},
	month = aug,
	year = {2024},
	note = {Section: Meteorology},
}

@misc{carslaw_openair_2025,
	title = {The openair book},
	url = {https://openair-project.github.io/book/},
	language = {en},
	urldate = {2025-02-18},
	author = {Carslaw, David C. and Davison, Jack},
	month = jan,
	year = {2025},
}

@misc{noauthor_hybrid_2024,
	title = {Hybrid transactional/analytical processing},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Hybrid_transactional/analytical_processing&oldid=1262703664},
	abstract = {Hybrid transaction/analytical processing (HTAP) is a term created by Gartner Inc., an information technology research and advisory company, in its early 2014 research report Hybrid Transaction/Analytical Processing Will Foster Opportunities for Dramatic Business Innovation. As defined by Gartner: Hybrid transaction/analytical processing (HTAP) is an emerging application architecture that "breaks the wall" between transaction processing and analytics. It enables more informed and "in business real time" decision making.
In more recent reports Gartner has begun referring to HTAP as "augmented transactions." Another analyst firm Forrester Research calls the same concept "Translytical" while 451 Group calls it "Hybrid operational and analytical processing" or HOAP.},
	language = {en},
	urldate = {2025-02-18},
	journal = {Wikipedia},
	month = dec,
	year = {2024},
	note = {Page Version ID: 1262703664},
}

@misc{motherduck_enterprise_nodate,
	title = {The {Enterprise} {Case} for {DuckDB}: 5 {Key} {Categories} and {Why} to {Use} it - {MotherDuck} {Blog}},
	shorttitle = {The {Enterprise} {Case} for {DuckDB}},
	url = {https://motherduck.com/blog/duckdb-enterprise-5-key-categories/},
	abstract = {Let's take a closer look to understand the various Enterprise use cases of DuckDB and how they can help on your data and analytics journey.¬† {\textbar} Reading time: 16 min read},
	language = {en},
	urldate = {2025-02-18},
	journal = {MotherDuck},
	author = {MotherDuck},
}

@misc{noauthor_tollguru_nodate,
	title = {{TollGuru} - {Tolls}. {Fuel}. {Trip}},
	url = {https://tollguru.com/},
	abstract = {Fleets, OEMs, and rideshares use TollGuru for pre-trip cost and time trade-offs, on-trip toll rate alerts, and post-trip toll billing.},
	language = {en},
	urldate = {2025-02-18},
}

@misc{noauthor_hybrid_nodate,
	title = {Hybrid transactional/analytical processing - {Wikipedia}},
	url = {https://en.wikipedia.org/wiki/Hybrid_transactional/analytical_processing},
	language = {en},
	urldate = {2025-02-19},
}

@misc{noauthor_nomads_nodate,
	title = {{NOMADS} at ncep.noaa.gov},
	url = {https://nomads.ncep.noaa.gov/},
	urldate = {2025-02-20},
}

@article{dowell_high-resolution_2022,
	title = {The {High}-{Resolution} {Rapid} {Refresh} ({HRRR}): {An} {Hourly} {Updating} {Convection}-{Allowing} {Forecast} {Model}. {Part} {I}: {Motivation} and {System} {Description}},
	volume = {37},
	copyright = {http://www.ametsoc.org/PUBSReuseLicenses},
	issn = {0882-8156, 1520-0434},
	shorttitle = {The {High}-{Resolution} {Rapid} {Refresh} ({HRRR})},
	url = {https://journals.ametsoc.org/view/journals/wefo/37/8/WAF-D-21-0151.1.xml},
	doi = {10.1175/WAF-D-21-0151.1},
	abstract = {Abstract
            The High-Resolution Rapid Refresh (HRRR) is a convection-allowing implementation of the Advanced Research version of the Weather Research and Forecasting (WRF-ARW) Model with hourly data assimilation that covers the conterminous United States and Alaska and runs in real time at the NOAA/National Centers for Environmental Prediction (NCEP). Implemented operationally at NOAA/NCEP in 2014, the HRRR features 3-km horizontal grid spacing and frequent forecasts (hourly for CONUS and 3-hourly for Alaska). HRRR initialization is designed for optimal short-range forecast skill with a particular focus on the evolution of precipitating systems. Key components of the initialization are radar-reflectivity data assimilation, hybrid ensemble-variational assimilation of conventional weather observations, and a cloud analysis to initialize stratiform cloud layers. From this initial state, HRRR forecasts are produced out to 18 h every hour, and out to 48 h every 6 h, with boundary conditions provided by the Rapid Refresh system. Between 2014 and 2020, HRRR development was focused on reducing model bias errors and improving forecast realism and accuracy. Improved representation of the planetary boundary layer, subgrid-scale clouds, and land surface contributed extensively to overall HRRR improvements. The final version of the HRRR (HRRRv4), implemented in late 2020, also features hybrid data assimilation using flow-dependent covariances from a 3-km, 36-member ensemble (‚ÄúHRRRDAS‚Äù) with explicit convective storms. HRRRv4 also includes prediction of wildfire smoke plumes. The HRRR provides a baseline capability for evaluating NOAA‚Äôs next-generation Rapid Refresh Forecast System, now under development.
            
              Significance Statement
              NOAA‚Äôs operational hourly updating, convection-allowing model, the High-Resolution Rapid Refresh (HRRR), is a key tool for short-range weather forecasting and situational awareness. Improvements in assimilation of weather observations, as well as in physics parameterizations, have led to improvements in simulated radar reflectivity and quantitative precipitation forecasts since the initial implementation of HRRR in September 2014. Other targeted development has focused on improved representation of the diurnal cycle of the planetary boundary layer, resulting in improved near-surface temperature and humidity forecasts. Additional physics and data assimilation changes have led to improved treatment of the development and erosion of low-level clouds, including subgrid-scale clouds. The final version of HRRR features storm-scale ensemble data assimilation and explicit prediction of wildfire smoke plumes.},
	number = {8},
	urldate = {2025-02-20},
	journal = {Weather and Forecasting},
	author = {Dowell, David C. and Alexander, Curtis R. and James, Eric P. and Weygandt, Stephen S. and Benjamin, Stanley G. and Manikin, Geoffrey S. and Blake, Benjamin T. and Brown, John M. and Olson, Joseph B. and Hu, Ming and Smirnova, Tatiana G. and Ladwig, Terra and Kenyon, Jaymes S. and Ahmadov, Ravan and Turner, David D. and Duda, Jeffrey D. and Alcott, Trevor I.},
	month = aug,
	year = {2022},
	pages = {1371--1395},
}

@article{benjamin_north_2016,
	title = {A {North} {American} {Hourly} {Assimilation} and {Model} {Forecast} {Cycle}: {The} {Rapid} {Refresh}},
	volume = {144},
	issn = {0027-0644, 1520-0493},
	shorttitle = {A {North} {American} {Hourly} {Assimilation} and {Model} {Forecast} {Cycle}},
	url = {https://journals.ametsoc.org/view/journals/mwre/144/4/mwr-d-15-0242.1.xml},
	doi = {10.1175/MWR-D-15-0242.1},
	abstract = {Abstract
            The Rapid Refresh (RAP), an hourly updated assimilation and model forecast system, replaced the Rapid Update Cycle (RUC) as an operational regional analysis and forecast system among the suite of models at the NOAA/National Centers for Environmental Prediction (NCEP) in 2012. The need for an effective hourly updated assimilation and modeling system for the United States for situational awareness and related decision-making has continued to increase for various applications including aviation (and transportation in general), severe weather, and energy. The RAP is distinct from the previous RUC in three primary aspects: a larger geographical domain (covering North America), use of the community-based Advanced Research version of the Weather Research and Forecasting (WRF) Model (ARW) replacing the RUC forecast model, and use of the Gridpoint Statistical Interpolation analysis system (GSI) instead of the RUC three-dimensional variational data assimilation (3DVar). As part of the RAP development, modifications have been made to the community ARW model (especially in model physics) and GSI assimilation systems, some based on previous model and assimilation design innovations developed initially with the RUC. Upper-air comparison is included for forecast verification against both rawinsondes and aircraft reports, the latter allowing hourly verification. In general, the RAP produces superior forecasts to those from the RUC, and its skill has continued to increase from 2012 up to RAP version 3 as of 2015. In addition, the RAP can improve on persistence forecasts for the 1‚Äì3-h forecast range for surface, upper-air, and ceiling forecasts.},
	number = {4},
	urldate = {2025-02-20},
	journal = {Monthly Weather Review},
	author = {Benjamin, Stanley G. and Weygandt, Stephen S. and Brown, John M. and Hu, Ming and Alexander, Curtis R. and Smirnova, Tatiana G. and Olson, Joseph B. and James, Eric P. and Dowell, David C. and Grell, Georg A. and Lin, Haidao and Peckham, Steven E. and Smith, Tracy Lorraine and Moninger, William R. and Kenyon, Jaymes S. and Manikin, Geoffrey S.},
	month = apr,
	year = {2016},
	pages = {1669--1694},
}

@misc{operations_ncep_2025,
	title = {{NCEP} {Data} {Products} {GFS} and {GDAS}},
	copyright = {https://www.weather.gov/disclaimer.php},
	url = {https://www.nco.ncep.noaa.gov/pmb/products/gfs/},
	abstract = {NCEP Data Products GFS and GDAS},
	language = {EN-US},
	urldate = {2025-02-20},
	year = {2025},
	author = {Operations, NCEP Central},
	note = {Publisher: NCEP Central Operations},
}

@misc{operations_ncep_nodate-1,
	title = {{NCEP} {Data} {Products} {HRRR}},
	copyright = {https://www.weather.gov/disclaimer.php},
	url = {https://www.nco.ncep.noaa.gov/pmb/products/hrrr/},
	abstract = {NCEP Data Products HRRR},
	language = {EN-US},
	urldate = {2025-02-20},
	author = {Operations, NCEP Central},
	note = {Publisher: NCEP Central Operations},
}

@misc{noauthor_hrrr_nodate,
	title = {{HRRR} - {EMC} - {Virtual} {Lab}},
	url = {https://vlab.noaa.gov/web/emc/hrrr},
	urldate = {2025-02-20},
}

@misc{noaa_wmo_2025,
	title = {{WMO} {CODE} {TABLE} 4677},
	url = {https://www.nodc.noaa.gov/archive/arc0021/0002199/1.1/data/0-data/HTML/WMO-CODE/WMO4677.HTM},
	urldate = {2025-03-02},
	date = {2025-03-02}
	}
